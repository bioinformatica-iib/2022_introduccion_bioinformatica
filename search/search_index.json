{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Inicio"},{"location":"#_1","text":"","title":""},{"location":"acerca/","tags":["requisitos","costos","inscripci\u00f3n","horarios","programa"],"text":"Correlativas para alumnos de grado UNSAM CB14 Estadistica Aplicada CB07 Biolog\u00eda Molecular Requisitos Conocimientos de biolog\u00eda molecular: Dogma de la biolog\u00eda molecular, codificaci\u00f3n de informaci\u00f3n en forma de ADN, ARN, proteinas, transcripci\u00f3n, traducci\u00f3n, organizaci\u00f3n celular en procariotas, eucariotas. Conocimientos b\u00e1sicos de estad\u00edstica: distribuciones, probabilidades. Manejo b\u00e1sico de computadoras. Costos Alumnos de Grado UNSAM: Gratis. Alumnos de Post-Grado UNSAM: Gratis. Alumnos de Post-Grado de otras Universidades P\u00fablicas: $5500 Docentes Universidades Nacionales: $5500 Alumnos de Posgrado Universidades Privadas: $7500 Empresas/Profesionales Independientes: $11500 Alumnos / Docentes / Profesionales Internacionales: USD $300 Horarios 2do Cuatrimestre 2022 (Virtual) Virtual: Martes y Jueves 9 a 13hs. Presencial: Aula a confirmar! Jueves 18 de Agosto: 14 a 18 hs Jueves 22 de Septiembre: 14 a 18 hs Jueves 13 de Octubre: 14 a 18 hs Asistencia Te\u00f3ricas: Asistencia opcional Pr\u00e1cticas: Asistencia obligatoria al 80% de los TPs Evaluaci\u00f3n Evaluaci\u00f3n te\u00f3rica: Un examen hacia el final de la cursada, con recuperatorio. El examen se divide en bloques tem\u00e1ticos que deben ser aprobados por separado. Cada bloque se aprueba con 5 y se promociona con 7. Evaluaci\u00f3n pr\u00e1ctica: Informes de trabajos pr\u00e1cticos. Se aprueban con 5. Promoci\u00f3n: Todas las instancias evaluatorias (te\u00f3rico + pr\u00e1ctico) con puntaje de 7 o m\u00e1s. Examen Final: En caso de instancias evaluatorias aprobadas con 5, o en caso de tener que recuperar. Recursa: En caso de no cumplir con requisito de asistencia o instancias evaluatorias no aprobadas. Inscripci\u00f3n Para inscribirte vas a necesitar: Si sos alumno UNSAM: Tu n\u00famero de legajo Si sos posgrado, investigador o trabajas en la industria: Breve descripci\u00f3n de tu l\u00ednea de trabajo Carta de motivaci\u00f3n Cierre de Inscripci\u00f3n 25 de Julio, 2022 Notificaci\u00f3n de Aceptaci\u00f3n Los cupos para estudiantes de posgrado, investigadores y trabajadores de la industria son limitados. Aquellas personas que sean aceptadas para el curso ser\u00e1n notficadas el 29 de Julio, 2022 Inscribirse","title":"Acerca de"},{"location":"acerca/#correlativas-para-alumnos-de-grado-unsam","text":"CB14 Estadistica Aplicada CB07 Biolog\u00eda Molecular","title":"Correlativas para alumnos de grado UNSAM"},{"location":"acerca/#requisitos","text":"Conocimientos de biolog\u00eda molecular: Dogma de la biolog\u00eda molecular, codificaci\u00f3n de informaci\u00f3n en forma de ADN, ARN, proteinas, transcripci\u00f3n, traducci\u00f3n, organizaci\u00f3n celular en procariotas, eucariotas. Conocimientos b\u00e1sicos de estad\u00edstica: distribuciones, probabilidades. Manejo b\u00e1sico de computadoras.","title":"Requisitos"},{"location":"acerca/#costos","text":"Alumnos de Grado UNSAM: Gratis. Alumnos de Post-Grado UNSAM: Gratis. Alumnos de Post-Grado de otras Universidades P\u00fablicas: $5500 Docentes Universidades Nacionales: $5500 Alumnos de Posgrado Universidades Privadas: $7500 Empresas/Profesionales Independientes: $11500 Alumnos / Docentes / Profesionales Internacionales: USD $300","title":"Costos"},{"location":"acerca/#horarios-2do-cuatrimestre-2022-virtual","text":"Virtual: Martes y Jueves 9 a 13hs. Presencial: Aula a confirmar! Jueves 18 de Agosto: 14 a 18 hs Jueves 22 de Septiembre: 14 a 18 hs Jueves 13 de Octubre: 14 a 18 hs","title":"Horarios 2do Cuatrimestre 2022 (Virtual)"},{"location":"acerca/#asistencia","text":"Te\u00f3ricas: Asistencia opcional Pr\u00e1cticas: Asistencia obligatoria al 80% de los TPs","title":"Asistencia"},{"location":"acerca/#evaluacion","text":"Evaluaci\u00f3n te\u00f3rica: Un examen hacia el final de la cursada, con recuperatorio. El examen se divide en bloques tem\u00e1ticos que deben ser aprobados por separado. Cada bloque se aprueba con 5 y se promociona con 7. Evaluaci\u00f3n pr\u00e1ctica: Informes de trabajos pr\u00e1cticos. Se aprueban con 5. Promoci\u00f3n: Todas las instancias evaluatorias (te\u00f3rico + pr\u00e1ctico) con puntaje de 7 o m\u00e1s. Examen Final: En caso de instancias evaluatorias aprobadas con 5, o en caso de tener que recuperar. Recursa: En caso de no cumplir con requisito de asistencia o instancias evaluatorias no aprobadas.","title":"Evaluaci\u00f3n"},{"location":"acerca/#inscripcion","text":"Para inscribirte vas a necesitar: Si sos alumno UNSAM: Tu n\u00famero de legajo Si sos posgrado, investigador o trabajas en la industria: Breve descripci\u00f3n de tu l\u00ednea de trabajo Carta de motivaci\u00f3n","title":"Inscripci\u00f3n"},{"location":"acerca/#cierre-de-inscripcion","text":"25 de Julio, 2022","title":"Cierre de Inscripci\u00f3n"},{"location":"acerca/#notificacion-de-aceptacion","text":"Los cupos para estudiantes de posgrado, investigadores y trabajadores de la industria son limitados. Aquellas personas que sean aceptadas para el curso ser\u00e1n notficadas el 29 de Julio, 2022 Inscribirse","title":"Notificaci\u00f3n de Aceptaci\u00f3n"},{"location":"contenidos/","text":"Contenidos te\u00f3ricos Experimentos Bioinform\u00e1ticos Conceptos b\u00e1sicos de computaci\u00f3n, algoritmos Bases de datos Ontolog\u00edas Alineamientos de a pares, similitud de secuencias Alineamientos m\u00faltiples Sequence profiles, Hidden Markov Models (I y II) Informaci\u00f3n contenida en alineamientos m\u00faltiples M\u00e9todos de predicci\u00f3n basados en datos, machine learning Reconstrucci\u00f3n de filogenias Bioinform\u00e1tica estructural Data clustering Secuenciaci\u00f3n y ensamblado de genomas Contenidos Pr\u00e1cticos Introducci\u00f3n a UNIX EMBOSS Suite Alineamientos de a pares B\u00fasquedas de secuencias por similitud y alineamientos m\u00faltiples Perfiles de secuencia, HMM y PSI-BLAST Filogenias, \u00e1rboles filogen\u00e9ticos y filogen\u00f3mica HMM y Redes Neuronales Programando en Biolog\u00eda Bioinform\u00e1tica estructural: Predicci\u00f3n de desorden Bioinform\u00e1tica estructural: Motivos funcionales en prote\u00ednas Bioinform\u00e1tica estructural: Dominios 3D y Modelado por Homolog\u00eda Data mining Visualizaci\u00f3n de genomas Gen\u00f3mica comparativa Short Read Mapping","title":"Contenidos"},{"location":"contenidos/#contenidos-teoricos","text":"Experimentos Bioinform\u00e1ticos Conceptos b\u00e1sicos de computaci\u00f3n, algoritmos Bases de datos Ontolog\u00edas Alineamientos de a pares, similitud de secuencias Alineamientos m\u00faltiples Sequence profiles, Hidden Markov Models (I y II) Informaci\u00f3n contenida en alineamientos m\u00faltiples M\u00e9todos de predicci\u00f3n basados en datos, machine learning Reconstrucci\u00f3n de filogenias Bioinform\u00e1tica estructural Data clustering Secuenciaci\u00f3n y ensamblado de genomas","title":"Contenidos te\u00f3ricos"},{"location":"contenidos/#contenidos-practicos","text":"Introducci\u00f3n a UNIX EMBOSS Suite Alineamientos de a pares B\u00fasquedas de secuencias por similitud y alineamientos m\u00faltiples Perfiles de secuencia, HMM y PSI-BLAST Filogenias, \u00e1rboles filogen\u00e9ticos y filogen\u00f3mica HMM y Redes Neuronales Programando en Biolog\u00eda Bioinform\u00e1tica estructural: Predicci\u00f3n de desorden Bioinform\u00e1tica estructural: Motivos funcionales en prote\u00ednas Bioinform\u00e1tica estructural: Dominios 3D y Modelado por Homolog\u00eda Data mining Visualizaci\u00f3n de genomas Gen\u00f3mica comparativa Short Read Mapping","title":"Contenidos Pr\u00e1cticos"},{"location":"cronograma/","tags":["cronograma","fechas","feriados"],"text":"Fecha Hora Donde Clase Tipo Docente Martes, 02 Agosto 2022 9:00 hs Online T1. Presentaci\u00f3n de la materia Te\u00f3rica F. Ag\u00fcero Jueves, 04 Agosto 2022 9:00 hs Online P1. Introducci\u00f3n a UNIX Pr\u00e1ctica A. Ricci Martes, 09 Agosto 2022 9:00 hs Online T2. Bases de datos y ontolog\u00edas Te\u00f3rica F. Ag\u00fcero Jueves, 11 Agosto 2022 9:00 hs Online P2. EMBOSS Suite Pr\u00e1ctica A. Ricci Martes, 16 Agosto 2022 9:00 hs Online T3. Alineamientos de a pares y B\u00fasqueda de secuencias por Similitud Te\u00f3rica F. Ag\u00fcero Jueves, 18 Agosto 2022 9:00 hs Online T4. Alineamientos m\u00faltiples Te\u00f3rica F. Ag\u00fcero Jueves, 18 Agosto 2022 14:00 hs Aula a definir TE1. Te\u00f3rica Extra 1 Te\u00f3rica F. Ag\u00fcero Martes, 23 Agosto 2022 9:00 hs Online P3. Alineamientos de a pares Pr\u00e1ctica H. Garc\u00eda A Jueves, 25 Agosto 2022 9:00 hs Online P4. B\u00fasqueda de secuencias por similitud y Alineamientos M\u00faltiples Pr\u00e1ctica H. Garc\u00eda A Martes, 30 Agosto 2022 9:00 hs Online T5. Informaci\u00f3n contenida en alineamientos m\u00faltiples Te\u00f3rica M. Nielsen Jueves, 01 Septiembre 2022 9:00 hs Online P5. Perfiles de secuencia y PSI-BLAST Pr\u00e1ctica H. Garc\u00eda A Martes, 06 Septiembre 2022 9:00 hs Online T6. Reconstrucci\u00f3n de filogenias Te\u00f3rica F. Ag\u00fcero Jueves, 08 Septiembre 2022 9:00 hs Online P6. Filogenias, \u00e1rboles filogen\u00e9ticos y filogen\u00f3mica Pr\u00e1ctica J. Glavina Martes, 13 Septiembre 2022 9:00 hs Online T7. M\u00e9todos de predicci\u00f3n de Machine Learning basados en datos (HMM y ANN) Te\u00f3rica M. Nielsen Jueves, 15 Septiembre 2022 9:00 hs Online P7. HMM y Redes neuronales Pr\u00e1ctica H. Garc\u00eda A. Martes, 20 Septiembre 2022 9:00 hs Online P8a. Programando en Biolog\u00eda Pr\u00e1ctica A. Ricci Jueves, 22 Septiembre 2022 9:00 hs Online P8b. Programando en Biolog\u00eda Pr\u00e1ctica A. Ricci Jueves, 22 Septiembre 2022 14:00 hs Aula a definir TE2. Te\u00f3rica Extra 2 Te\u00f3rica F. Ag\u00fcero Martes, 27 Septiembre 2022 9:00 hs Online T8. Bioinform\u00e1tica Estructural: Desorden Te\u00f3rica L. Chemes Jueves, 29 Septiembre 2022 9:00 hs Online P9. Bioinform\u00e1tica Estructural: Predicci\u00f3n de Desorden Pr\u00e1ctica J. Glavina Martes, 04 Octubre 2022 9:00 hs Online T9. Bioinform\u00e1tica Estructural: Motivos lineales Te\u00f3rica L. Chemes Jueves, 06 Octubre 2022 9:00 hs Online P10. Bioinform\u00e1tica Estructural: Motivos funcionales en prote\u00ednas Pr\u00e1ctica J. Glavina Martes, 11 Octubre 2022 9:00 hs Online T10. Bioinform\u00e1tica Estructural: Dominios Te\u00f3rica L. Chemes Jueves, 13 Octubre 2022 9:00 hs Online P11. Bioinform\u00e1tica Estructural: Dominios 3D y Modelado por homolog\u00eda Pr\u00e1ctica J. Glavina Jueves, 13 Octubre 2022 14:00 hs Aula a definir TE3. Te\u00f3rica Extra 3 Te\u00f3rica J. Glavina Martes, 18 Octubre 2022 9:00 hs Online T11. Data clustering Te\u00f3rica F. Ag\u00fcero Jueves, 20 Octubre 2022 9:00 hs Online P12a. Data mining Pr\u00e1ctica A. Ricci Martes, 25 Octubre 2022 9:00 hs Online T12. Secuenciaci\u00f3n y ensamblado de genomas Te\u00f3rica F. Ag\u00fcero Jueves, 27 Octubre 2022 9:00 hs Online P12b. Data mining Pr\u00e1ctica A. Ricci Martes, 01 Noviembre 2022 9:00 hs Online P13. Visualizando genomas con Artemis Pr\u00e1ctica J. Glavina Jueves, 03 Noviembre 2022 9:00 hs Online P14. Gen\u00f3mica comparativa Pr\u00e1ctica J. Glavina Martes, 08 Noviembre 2022 9:00 hs Online Repaso Te\u00f3rica F. Ag\u00fcero L. Chemes M. Nielsen Jueves, 10 Noviembre 2022 9:00 hs A definir Examen F. Ag\u00fcero L. Chemes M. Nielsen Martes, 15 Noviembre 2022 9:00 hs LIBRE Jueves, 17 Noviembre 2022 9:00 hs Online Revisi\u00f3n examen F. Ag\u00fcero L. Chemes M. Nielsen Martes, 22 Noviembre 2022 9:00 hs LIBRE Jueves, 24 Noviembre 2022 9:00 hs LIBRE Martes, 29 Noviembre 2022 9:00 hs A definir Recuperatorio F. Ag\u00fcero L. Chemes M. Nielsen Jueves, 1 Diciembre 2022 9:00 hs Online Revisi\u00f3n examen F. Ag\u00fcero L. Chemes M. Nielsen","title":"Cronograma"},{"location":"docentes/","tags":["Docentes","Instructores"],"text":"Docentes Profesor Titular Dr. Fern\u00e1n Ag\u00fcero Profesores invitados Dr. Morten Nielsen Dra. Luc\u00eda B. Chemes Jefa de Trabajos Pr\u00e1cticos Dra. Juliana Glavina Ayudantes de 1ra Lic. Heli Garc\u00eda \u00c1lvarez Lic. Alejandro Ricci","title":"Docentes"},{"location":"docentes/#docentes","text":"","title":"Docentes"},{"location":"docentes/#profesor-titular","text":"Dr. Fern\u00e1n Ag\u00fcero","title":"Profesor Titular"},{"location":"docentes/#profesores-invitados","text":"Dr. Morten Nielsen Dra. Luc\u00eda B. Chemes","title":"Profesores invitados"},{"location":"docentes/#jefa-de-trabajos-practicos","text":"Dra. Juliana Glavina","title":"Jefa de Trabajos Pr\u00e1cticos"},{"location":"docentes/#ayudantes-de-1ra","text":"Lic. Heli Garc\u00eda \u00c1lvarez Lic. Alejandro Ricci","title":"Ayudantes de 1ra"},{"location":"tags/","text":"A continuaci\u00f3n una lista de tags relevantes en el sitio: [TAGS]","title":"Tags"},{"location":"77_useful_code/grid_test/","text":"#ci_grid { border-width:0; } #ci_grid td { text-align:center; vertical-align: middle; padding: 10px 5px 10px 5px; border-width:2px; } #ci_grid td:hover { opacity: 0.9; } #ci_grid tr:hover { background-color: white; } #ci_grid img { height: 150px; } Grid test TP 1 TP 2 TP 3 TP 4 TP 5 TP 6 TP 7 TP 8","title":"Grid test"},{"location":"77_useful_code/grid_test/#grid-test","text":"TP 1 TP 2 TP 3 TP 4 TP 5 TP 6 TP 7 TP 8","title":"Grid test"},{"location":"instructivos/inicio/","tags":["instructivos"],"text":"Hola! En esta p\u00e1gina encontrar\u00e1n los instructivos que le permitir\u00e1n ir resolviendo algunas cosas t\u00e9cnicas, como por ejemplo: la instalaci\u00f3n de una m\u00e1quina virtual! Consultas y Canales de Comunicaci\u00f3n Si tu consulta est\u00e1 relacionada con alg\u00fan problema con la instalaci\u00f3n o funcionamiento de la m\u00e1quina virtual: Antes de consultar por favor, asegurate que no se encuentre ya resuelto en la secci\u00f3n de problemas con la m\u00e1quina virtual. Si no se encuentra resuelto o no est\u00e1 relacionado con la m\u00e1quina virtual podes encontrarnos en: en Slack en el canal dedicado consultas-vm o preguntas-y-respuestas si no est\u00e1 relacionado con la m\u00e1quina virtual.","title":"Inicio"},{"location":"instructivos/inicio/#hola","text":"En esta p\u00e1gina encontrar\u00e1n los instructivos que le permitir\u00e1n ir resolviendo algunas cosas t\u00e9cnicas, como por ejemplo: la instalaci\u00f3n de una m\u00e1quina virtual!","title":"Hola"},{"location":"instructivos/inicio/#consultas-y-canales-de-comunicacion","text":"Si tu consulta est\u00e1 relacionada con alg\u00fan problema con la instalaci\u00f3n o funcionamiento de la m\u00e1quina virtual: Antes de consultar por favor, asegurate que no se encuentre ya resuelto en la secci\u00f3n de problemas con la m\u00e1quina virtual. Si no se encuentra resuelto o no est\u00e1 relacionado con la m\u00e1quina virtual podes encontrarnos en: en Slack en el canal dedicado consultas-vm o preguntas-y-respuestas si no est\u00e1 relacionado con la m\u00e1quina virtual.","title":"Consultas y Canales de Comunicaci\u00f3n"},{"location":"instructivos/maquina_virtual/","tags":["instructivos","maquina virtual"],"text":"Puesta en funcionamiento de m\u00e1quina virtual Este es un instructivo corto sobre c\u00f3mo hacer para correr la m\u00e1quina virtual de la materia en sus compus sin tener que reinstalar el sistema operativo. Vamos a necesitar: Software y archivos a usar Oracle VirtualBox instalado en nuestras compus. WinZip o GUnzip para Windows o Linux, respectivamente. El disco de la m\u00e1quina virtual (VMDK) Requerimientos de Hardware m\u00ednimos 20 GB de espacio libre en disco duro (para VMDK) 2 GB de RAM. Antes de arrancar veamos algunas definiciones \u00bfQu\u00e9 es un sistema operativo? Un sistema operativo es una pieza de software que nos permite realizar funciones b\u00e1sicas, como copiar/pegar/mover/generar archivos, y sobre el cual se construyen otros softwares. Muchos sistemas operativos tambi\u00e9n proveen una interfaz gr\u00e1fica que permite al usuario hacer tareas sin l\u00ednea de comando (yay!). Hay un mont\u00f3n de sistemas operativos, pero los m\u00e1s comunes son: Windows: Probablemente el que ustedes tienen en su compu) OSX: El que tienen las mac Linux: El que vamos a usar en la materia \u00bfQu\u00e9 es una m\u00e1quina virtual? Las m\u00e1quinas virtuales no son m\u00e1s que compus invitadas (o guests ), emuladas dentro de una computadora real, hospedadora (o host ). La compu de ustedes es la m\u00e1quina f\u00edsica (la computadora real, hospedadora o host ) y adentro le vamos a poner otra compu virtual. Las m\u00e1quinas virtuales corren un sistema operativo que permitir\u00e1 hacer distintas cosas. La virtualizaci\u00f3n es un proceso costoso , ya que nos permite crear nuevas compus pero, al momento de correrlas, estaremos repartiendo los recursos reales (espacio en disco, memoria RAM y velocidad de procesamiento CPU) del host (es decir, de nuestra compu ) entre todas las m\u00e1quinas virtuales guest que est\u00e9n activas. Es por esto que debemos ser cuidadosos al momento de generarlas, d\u00e1ndoles suficientes recursos para funcionar, pero no todos los recursos del host (es decir, de nuestra compu ). El disco de m\u00e1quina virtual El disco de una m\u00e1quina virtual es una \u201cfoto\u201d de un disco de almacenamiento. Todo lo que un disco duro tiene guardado, incluyendo el sistema operativo y los programas instalados, quedar\u00e1n guardados en un archivo cuando la creemos con las herramientas adecuadas. Como no existe un disco duro f\u00edsico se lo considera disco virtual . Este archivo permite regenerar el estado de la computadora desde la que se cre\u00f3 dicho disco al momento de sacar la foto. Los docentes ya hemos ensamblado, para la materia, un disco de m\u00e1quina virtual con Lubuntu 18 (una distribuci\u00f3n versi\u00f3n ultra liviana de Ubuntu 18) en la que hemos instalado todos los programas y herramientas que usaremos en la asignatura. En adelante, nos referiremos a \u00e9ste como IBioinfo. Paso 1. Descargar la M\u00e1quina Virtual Pueden usar este link, que tiene la m\u00e1quina que usamos en los TPs (es un link a Dropbox). Pr\u00f3ximamente Link de Descarga Atenci\u00f3n Son archivos pesados (~ 20GB ). Desc\u00e1rguenlos con tiempo y con conexi\u00f3n estable . Si no cuentan con una conexi\u00f3n estable, pueden escribirnos para buscar alguna soluci\u00f3n alternativa. Una vez descargado el archivo, descomprimir para obtener el vmdk . Elegir la ubicaci\u00f3n Elijan la ubicaci\u00f3n final del archivo vmdk ya que una vez creada la Virtual Machine NO se puede mover el archivo .vmdk de lugar. Paso 2. Instalar Virtual Box Mientras descarga la imagen, aprovechen el tiempo muerto para descargar Oracle Virtual Box. El programa es gratuito y pueden descargarlo desde la p\u00e1gina oficial . Descarguen la \u00faltima versi\u00f3n (v6.1), apropiada para su sistema operativo (Windows, OSX o Linux) y sigan las instrucciones del instalador hasta que hayan terminado. Paso 3. Crear una m\u00e1quina virtual Virtual Box es un virtualizador de entornos. Nos permite generar m\u00e1quinas virtuales . Vamos a crear nuestra m\u00e1quina virtual con el archivo de disco virtual IBioinfo-Lubuntu-32.vmdk que acabamos de descargar. Para eso: Abrimos Virtual Box: Hacemos click en New o Nueva Aparecer\u00e1 una caja de di\u00e1logo, en donde deberemos indicar: Name o Nombre: Es el nombre que queremos darle a la m\u00e1quina virtual. Elijan el que quieran. Machine Folder o Carpeta de M\u00e1quina: Es la ubicaci\u00f3n de la m\u00e1quina virtual. Elijan la que quieran. Type o Tipo: Es el tipo de virtualizaci\u00f3n. Elijan Linux. Version o Versi\u00f3n: Es la versi\u00f3n del sistema operativo. Ubuntu 32 bits. En el mismo panel deberemos indicar la cantidad de memoria RAM que vamos a prestarle a la m\u00e1quina virtual. Pongan la m\u00e1xima que puedan dentro de la regi\u00f3n verde (recuerden que al momento de usar la m\u00e1quina virtual, \u00e9sta sustraer\u00e1 autom\u00e1ticamente recursos de nuestra compu). Estos valores depender\u00e1n de la cantidad de RAM f\u00edsica que tenga nuestro host . Cuanto m\u00e1s RAM le demos a la m\u00e1quina virtual, m\u00e1s r\u00e1pido va a andar. Para las tareas que realizaremos, darle entre 2 y 4 GB de ram (2048-4096 MB) estar\u00e1 bien. Y finalmente el disco duro. Aqu\u00ed es donde entra nuestro archivo IBioinfo-Lubuntu.vmdk : Haciendo click en el icono de la carpeta a la derecha, agregaremos nuestro disco virtual: A\u00f1adir --> elegimos nuestro VMDK Con esto habremos finalizado la creaci\u00f3n y podremos comenzar. Si todo sali\u00f3 bien, deber\u00e1n ver una entrada con su m\u00e1quina virtual recientemente creada en el Inicio del Virtual Box. Intenten correr la m\u00e1quina virtual haciendo click en \u201cIniciar\u201d. En breve deber\u00edan ver el logo de Lubuntu y pronto el escritorio del sistema operativo. Contrase\u00f1a Si les pide alguna contrase\u00f1a, la misma es unsam . No cambiar ubicaci\u00f3n Una vez creada la Virtual Machine NO muevan el archivo .vmdk de lugar. Si lo hicieron, f\u00edjense en la secci\u00f3n de problemas que est\u00e1 la soluci\u00f3n.","title":"M\u00e1quina Virtual"},{"location":"instructivos/maquina_virtual/#puesta-en-funcionamiento-de-maquina-virtual","text":"Este es un instructivo corto sobre c\u00f3mo hacer para correr la m\u00e1quina virtual de la materia en sus compus sin tener que reinstalar el sistema operativo. Vamos a necesitar:","title":"Puesta en funcionamiento de m\u00e1quina virtual"},{"location":"instructivos/maquina_virtual/#software-y-archivos-a-usar","text":"Oracle VirtualBox instalado en nuestras compus. WinZip o GUnzip para Windows o Linux, respectivamente. El disco de la m\u00e1quina virtual (VMDK)","title":"Software y archivos a usar"},{"location":"instructivos/maquina_virtual/#requerimientos-de-hardware-minimos","text":"20 GB de espacio libre en disco duro (para VMDK) 2 GB de RAM.","title":"Requerimientos de Hardware m\u00ednimos"},{"location":"instructivos/maquina_virtual/#antes-de-arrancar-veamos-algunas-definiciones","text":"","title":"Antes de arrancar veamos algunas definiciones"},{"location":"instructivos/maquina_virtual/#que-es-un-sistema-operativo","text":"Un sistema operativo es una pieza de software que nos permite realizar funciones b\u00e1sicas, como copiar/pegar/mover/generar archivos, y sobre el cual se construyen otros softwares. Muchos sistemas operativos tambi\u00e9n proveen una interfaz gr\u00e1fica que permite al usuario hacer tareas sin l\u00ednea de comando (yay!). Hay un mont\u00f3n de sistemas operativos, pero los m\u00e1s comunes son: Windows: Probablemente el que ustedes tienen en su compu) OSX: El que tienen las mac Linux: El que vamos a usar en la materia","title":"\u00bfQu\u00e9 es un sistema operativo?"},{"location":"instructivos/maquina_virtual/#que-es-una-maquina-virtual","text":"Las m\u00e1quinas virtuales no son m\u00e1s que compus invitadas (o guests ), emuladas dentro de una computadora real, hospedadora (o host ). La compu de ustedes es la m\u00e1quina f\u00edsica (la computadora real, hospedadora o host ) y adentro le vamos a poner otra compu virtual. Las m\u00e1quinas virtuales corren un sistema operativo que permitir\u00e1 hacer distintas cosas. La virtualizaci\u00f3n es un proceso costoso , ya que nos permite crear nuevas compus pero, al momento de correrlas, estaremos repartiendo los recursos reales (espacio en disco, memoria RAM y velocidad de procesamiento CPU) del host (es decir, de nuestra compu ) entre todas las m\u00e1quinas virtuales guest que est\u00e9n activas. Es por esto que debemos ser cuidadosos al momento de generarlas, d\u00e1ndoles suficientes recursos para funcionar, pero no todos los recursos del host (es decir, de nuestra compu ).","title":"\u00bfQu\u00e9 es una m\u00e1quina virtual?"},{"location":"instructivos/maquina_virtual/#el-disco-de-maquina-virtual","text":"El disco de una m\u00e1quina virtual es una \u201cfoto\u201d de un disco de almacenamiento. Todo lo que un disco duro tiene guardado, incluyendo el sistema operativo y los programas instalados, quedar\u00e1n guardados en un archivo cuando la creemos con las herramientas adecuadas. Como no existe un disco duro f\u00edsico se lo considera disco virtual . Este archivo permite regenerar el estado de la computadora desde la que se cre\u00f3 dicho disco al momento de sacar la foto. Los docentes ya hemos ensamblado, para la materia, un disco de m\u00e1quina virtual con Lubuntu 18 (una distribuci\u00f3n versi\u00f3n ultra liviana de Ubuntu 18) en la que hemos instalado todos los programas y herramientas que usaremos en la asignatura. En adelante, nos referiremos a \u00e9ste como IBioinfo.","title":"El disco de m\u00e1quina virtual"},{"location":"instructivos/maquina_virtual/#paso-1-descargar-la-maquina-virtual","text":"Pueden usar este link, que tiene la m\u00e1quina que usamos en los TPs (es un link a Dropbox). Pr\u00f3ximamente Link de Descarga Atenci\u00f3n Son archivos pesados (~ 20GB ). Desc\u00e1rguenlos con tiempo y con conexi\u00f3n estable . Si no cuentan con una conexi\u00f3n estable, pueden escribirnos para buscar alguna soluci\u00f3n alternativa. Una vez descargado el archivo, descomprimir para obtener el vmdk . Elegir la ubicaci\u00f3n Elijan la ubicaci\u00f3n final del archivo vmdk ya que una vez creada la Virtual Machine NO se puede mover el archivo .vmdk de lugar.","title":"Paso 1. Descargar la M\u00e1quina Virtual"},{"location":"instructivos/maquina_virtual/#paso-2-instalar-virtual-box","text":"Mientras descarga la imagen, aprovechen el tiempo muerto para descargar Oracle Virtual Box. El programa es gratuito y pueden descargarlo desde la p\u00e1gina oficial . Descarguen la \u00faltima versi\u00f3n (v6.1), apropiada para su sistema operativo (Windows, OSX o Linux) y sigan las instrucciones del instalador hasta que hayan terminado.","title":"Paso 2. Instalar Virtual Box"},{"location":"instructivos/maquina_virtual/#paso-3-crear-una-maquina-virtual","text":"Virtual Box es un virtualizador de entornos. Nos permite generar m\u00e1quinas virtuales . Vamos a crear nuestra m\u00e1quina virtual con el archivo de disco virtual IBioinfo-Lubuntu-32.vmdk que acabamos de descargar. Para eso: Abrimos Virtual Box: Hacemos click en New o Nueva Aparecer\u00e1 una caja de di\u00e1logo, en donde deberemos indicar: Name o Nombre: Es el nombre que queremos darle a la m\u00e1quina virtual. Elijan el que quieran. Machine Folder o Carpeta de M\u00e1quina: Es la ubicaci\u00f3n de la m\u00e1quina virtual. Elijan la que quieran. Type o Tipo: Es el tipo de virtualizaci\u00f3n. Elijan Linux. Version o Versi\u00f3n: Es la versi\u00f3n del sistema operativo. Ubuntu 32 bits. En el mismo panel deberemos indicar la cantidad de memoria RAM que vamos a prestarle a la m\u00e1quina virtual. Pongan la m\u00e1xima que puedan dentro de la regi\u00f3n verde (recuerden que al momento de usar la m\u00e1quina virtual, \u00e9sta sustraer\u00e1 autom\u00e1ticamente recursos de nuestra compu). Estos valores depender\u00e1n de la cantidad de RAM f\u00edsica que tenga nuestro host . Cuanto m\u00e1s RAM le demos a la m\u00e1quina virtual, m\u00e1s r\u00e1pido va a andar. Para las tareas que realizaremos, darle entre 2 y 4 GB de ram (2048-4096 MB) estar\u00e1 bien. Y finalmente el disco duro. Aqu\u00ed es donde entra nuestro archivo IBioinfo-Lubuntu.vmdk : Haciendo click en el icono de la carpeta a la derecha, agregaremos nuestro disco virtual: A\u00f1adir --> elegimos nuestro VMDK Con esto habremos finalizado la creaci\u00f3n y podremos comenzar. Si todo sali\u00f3 bien, deber\u00e1n ver una entrada con su m\u00e1quina virtual recientemente creada en el Inicio del Virtual Box. Intenten correr la m\u00e1quina virtual haciendo click en \u201cIniciar\u201d. En breve deber\u00edan ver el logo de Lubuntu y pronto el escritorio del sistema operativo. Contrase\u00f1a Si les pide alguna contrase\u00f1a, la misma es unsam . No cambiar ubicaci\u00f3n Una vez creada la Virtual Machine NO muevan el archivo .vmdk de lugar. Si lo hicieron, f\u00edjense en la secci\u00f3n de problemas que est\u00e1 la soluci\u00f3n.","title":"Paso 3. Crear una m\u00e1quina virtual"},{"location":"instructivos/problemasVM/","text":"Problemas y posibles soluciones No funciona y eligieron la virtualizaci\u00f3n de 32 bits (es la \u00fanica que se est\u00e1 ofreciendo) Soluci\u00f3n: Habilitar una opci\u00f3n de virtualizaci\u00f3n especial ( PAN/NX ), sobre todo en sistemas nuevos. Para hacerlo: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador --> Habilitar PAE/NX Habilitar PAE/NX tiene que estar con el tick Sigue sin funcionar Habilitar PAE/NX est\u00e1 tildado y la m\u00e1quina virtual se queda congelada en una pantalla similar a la siguiente: Soluci\u00f3n: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador Prueben con 2 o 4 procesadores en la barra que dice Procesador(es), siempre manej\u00e1ndose dentro del rango verde. Mensaje de Error: \"This computer does not have hardware-assisted virtualization\" La computadora, por defecto, no permite la virtualizaci\u00f3n. Soluci\u00f3n: Sigan los pasos descritos en este post . En sistema aparece cartel que dice: el hardware de virtualizaci\u00f3n est\u00e1 habilitado en la secci\u00f3n de aceleraci\u00f3n de la p\u00e1gina de Sistema... Soluci\u00f3n: Accedan a la pesta\u00f1a de Aceleraci\u00f3n y aseg\u00farense de que no haya ninguna interfaz de paravirtualizaci\u00f3n seleccionada. Error: \"Could not open medium\" Es posible que hayan movido el archivo vmdk. Soluci\u00f3n: Vayan a: Archivo --> Biblioteca de Medios (Virtual media manager) y remuevan el disco problem\u00e1tico. Si la opci\u00f3n de remover les aparece deshabilitada, deber\u00e1n \u201cLiberarlo\u201d primero. Luego, borren la m\u00e1quina virtual y vu\u00e9lvanla a crear usando la nueva (y definitiva ) ubicaci\u00f3n del archivo vmdk. Error: Kernel driver not installed (rc=-1908) Soluci\u00f3n para m\u00e1quina f\u00edsica/host con sistema operativo Ubuntu: Abrir la terminal y correr los siguientes comandos: sudo dpkg-reconfigure virtualbox-dkms sudo /sbin/vboxconfig Luego de esto, abrir nuevamente VirtualBox e iniciar la maquina virtual. El error se deber\u00eda haber solucionado.","title":"Problemas instalando la M\u00e1quina Virtual"},{"location":"instructivos/problemasVM/#problemas-y-posibles-soluciones","text":"","title":"Problemas y posibles soluciones"},{"location":"instructivos/problemasVM/#no-funciona-y-eligieron-la-virtualizacion-de-32-bits-es-la-unica-que-se-esta-ofreciendo","text":"Soluci\u00f3n: Habilitar una opci\u00f3n de virtualizaci\u00f3n especial ( PAN/NX ), sobre todo en sistemas nuevos. Para hacerlo: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador --> Habilitar PAE/NX Habilitar PAE/NX tiene que estar con el tick","title":"No funciona y eligieron la virtualizaci\u00f3n de 32 bits (es la \u00fanica que se est\u00e1 ofreciendo)"},{"location":"instructivos/problemasVM/#sigue-sin-funcionar","text":"Habilitar PAE/NX est\u00e1 tildado y la m\u00e1quina virtual se queda congelada en una pantalla similar a la siguiente: Soluci\u00f3n: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador Prueben con 2 o 4 procesadores en la barra que dice Procesador(es), siempre manej\u00e1ndose dentro del rango verde.","title":"Sigue sin funcionar"},{"location":"instructivos/problemasVM/#mensaje-de-error-this-computer-does-not-have-hardware-assisted-virtualization","text":"La computadora, por defecto, no permite la virtualizaci\u00f3n. Soluci\u00f3n: Sigan los pasos descritos en este post .","title":"Mensaje de Error: \"This computer does not have hardware-assisted virtualization\""},{"location":"instructivos/problemasVM/#en-sistema-aparece-cartel-que-dice-el-hardware-de-virtualizacion-esta-habilitado-en-la-seccion-de-aceleracion-de-la-pagina-de-sistema","text":"Soluci\u00f3n: Accedan a la pesta\u00f1a de Aceleraci\u00f3n y aseg\u00farense de que no haya ninguna interfaz de paravirtualizaci\u00f3n seleccionada.","title":"En sistema aparece cartel que dice: el hardware de virtualizaci\u00f3n est\u00e1 habilitado en la secci\u00f3n de aceleraci\u00f3n de la p\u00e1gina de Sistema..."},{"location":"instructivos/problemasVM/#error-could-not-open-medium","text":"Es posible que hayan movido el archivo vmdk. Soluci\u00f3n: Vayan a: Archivo --> Biblioteca de Medios (Virtual media manager) y remuevan el disco problem\u00e1tico. Si la opci\u00f3n de remover les aparece deshabilitada, deber\u00e1n \u201cLiberarlo\u201d primero. Luego, borren la m\u00e1quina virtual y vu\u00e9lvanla a crear usando la nueva (y definitiva ) ubicaci\u00f3n del archivo vmdk.","title":"Error: \"Could not open medium\""},{"location":"instructivos/problemasVM/#error-kernel-driver-not-installed-rc-1908","text":"Soluci\u00f3n para m\u00e1quina f\u00edsica/host con sistema operativo Ubuntu: Abrir la terminal y correr los siguientes comandos: sudo dpkg-reconfigure virtualbox-dkms sudo /sbin/vboxconfig Luego de esto, abrir nuevamente VirtualBox e iniciar la maquina virtual. El error se deber\u00eda haber solucionado.","title":"Error: Kernel driver not installed (rc=-1908)"},{"location":"instructivos/tipsVM/","text":"Resoluci\u00f3n de Pantalla Por defecto, la resoluci\u00f3n de la VM es 800x600. Si el monitor o pantalla nos da para agrandar un poco esto, ac\u00e1 les dejo los pasos para hacerlo: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Ajustes del monitor Pasar la resoluci\u00f3n a la mayor posible (podemos usar la misma que usamos en el sistema operativo del host) Click en Aplicar y, si estamos conformes, en Guardar . Para que la resoluci\u00f3n de pantalla elegida sea permanente: Esta versi\u00f3n de lubuntu presenta un bug donde la resoluci\u00f3n cambia cada vez que se suspende la VM. Por lo tanto la forma m\u00e1s sencilla de solucionarlo es configurando la VM para no suspenderse m\u00e1s: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Administrador de energ\u00eda Click en la pesta\u00f1a Pantalla y luego mover las tres barras hasta la izquierda como se muestra en la siguiente imagen: Click en la pesta\u00f1a Seguridad y luego seleccionar \"Nunca\" en la lista desplegable que aparece al lado de Bloquear sesi\u00f3n autom\u00e1ticamente y luego destildar donde dice \"Bloquear la pantalla cuando el sistema vaya a suspensi\u00f3n\". Tiene que quedar como se ve en la siguiente imagen: Maximizar la ventana Si maximizamos la ventana a pantalla completa , ser\u00e1 como estar usando la m\u00e1quina virtual solamente. Esto para algunos puede resultar m\u00e1s c\u00f3modo. Pueden probarlo presionando las teclas Ctrl derecho + F juntas. Acceso a la l\u00ednea de comandos Para acceder a la l\u00ednea de comandos hay tres formas: Forma 1: Inicio --> Herramientas del sistema --> LXTerminal Forma 2: Presionar las teclas Ctrl + Alt + T , las tres juntas. Ctrl y Alt tienen que ser los de la izquierda. Forma 3: Presionando la tecla F4 en la carpeta donde nos encontremos. Cambiar el layout del teclado Para cambiar el layout del teclado: Click derecho en el panel: Seleccionar A\u00f1adir/quitar elementos del panel Seleccionar A\u00f1adir --> Agente de distribuci\u00f3n del teclado Hacer click en A\u00f1adir y cerrar la ventana. En el panel aparecer\u00e1 al lado del bot\u00f3n de apagado la bandera espa\u00f1ola, click derecho sobre la bandera y seleccionar la primera opci\u00f3n: Configuraci\u00f3n de Agente de distribuci\u00f3n de teclado Se abrir\u00e1 una ventana. Destildar la opci\u00f3n: Mantener las distribuciones del sistema y se habilitar\u00e1n las opciones: En Distribuciones del teclado elegir A\u00f1adir y busca en la lista el teclado correspondiente. Los m\u00e1s comunes son: Espa\u00f1ol (es) Espa\u00f1ol latinoamericano (latam) Ingl\u00e9s (EE.UU.) (us) Si no sab\u00e9s cual es: pod\u00e9s chequear algunos teclados en Wiki en la secci\u00f3n QUERTY. Selecciona el que corresponda y haz click en Aceptar. Volver\u00e1 a la ventana anterior donde puedes subir la configuraci\u00f3n que desees usar (o quitar la que no quieres usar). 8. Si dejaste m\u00e1s de una configuraci\u00f3n, haciendo click sobre la banderita en el panel pod\u00e9s cambiar a las distintas configuraciones (va cambiando la etiqueta). Acceso a Internet Es necesario que la m\u00e1quina virtual tenga acceso a internet. Para configurarlo: Van a Settings / Configuraci\u00f3n --> Network / Red Habilitan en la pesta\u00f1a Adapter 1 la opci\u00f3n Enable Network Adapter Enable Network Adapter tiene que estar tildado. Copiar y pegar de m\u00e1quina host a m\u00e1quina virtual y viceversa Para copiar y pegar de la m\u00e1quina host (es decir, SUS compus f\u00edsicas) a la m\u00e1quina virtual (la de la materia) tienen que: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos --> Shared Clipboard / Portapapeles Compartido y seleccionan Bidirectional / Bidireccional Compartir una carpeta con la m\u00e1quina host Una manera simple de compartir archivos entre la m\u00e1quina host (es decir, SUS compus f\u00edsicas) y la m\u00e1quina virtual o viceversa es crear una carpeta compartida, para esto: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos --> Shared Folder / Carpetas Compartidas y seleccionan Shared Folders Settings / Preferencias de carpetas compartidas . Se les abrir\u00e1 una ventana, donde deben elegir la carpetita con el s\u00edmbolo m\u00e1s que est\u00e1 a la derecha para agregar una carpeta compartida y se les abrir\u00e1 una nueva ventana. Folder Path: Indican la ruta a la carpeta que van a compartir en la m\u00e1quina host (SU computadora). Folder Name: El nombre con el que aparecer\u00e1 la carpeta en la m\u00e1quina virtual Auto-mount: Tiene que estar tickeado. Make Permanent: Tiene que estar tickeado. Click en Ok. Deber\u00edan ver algo similar a lo siguiente: Click en Ok. Se les debe haber creado un \u00edcono en el escritorio de la m\u00e1quina virtual con el nombre que eligieron en Folder Name Si hacen click, deber\u00edan poder acceder a la carpeta. Si aparece un cartel donde dice que no tienen los permisos necesarios, entonces hacen lo siguiente. Abren una terminal utilizando las teclas: Ctrl + Alt + T Escriben lo siguiente en la terminal: sudo usermod -a -G vboxsf $( whoami ) Si les pide una clave es unsam","title":"Tips and Tricks para usar la M\u00e1quina Virtual m\u00e1s c\u00f3modos"},{"location":"instructivos/tipsVM/#resolucion-de-pantalla","text":"Por defecto, la resoluci\u00f3n de la VM es 800x600. Si el monitor o pantalla nos da para agrandar un poco esto, ac\u00e1 les dejo los pasos para hacerlo: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Ajustes del monitor Pasar la resoluci\u00f3n a la mayor posible (podemos usar la misma que usamos en el sistema operativo del host) Click en Aplicar y, si estamos conformes, en Guardar . Para que la resoluci\u00f3n de pantalla elegida sea permanente: Esta versi\u00f3n de lubuntu presenta un bug donde la resoluci\u00f3n cambia cada vez que se suspende la VM. Por lo tanto la forma m\u00e1s sencilla de solucionarlo es configurando la VM para no suspenderse m\u00e1s: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Administrador de energ\u00eda Click en la pesta\u00f1a Pantalla y luego mover las tres barras hasta la izquierda como se muestra en la siguiente imagen: Click en la pesta\u00f1a Seguridad y luego seleccionar \"Nunca\" en la lista desplegable que aparece al lado de Bloquear sesi\u00f3n autom\u00e1ticamente y luego destildar donde dice \"Bloquear la pantalla cuando el sistema vaya a suspensi\u00f3n\". Tiene que quedar como se ve en la siguiente imagen:","title":"Resoluci\u00f3n de Pantalla"},{"location":"instructivos/tipsVM/#maximizar-la-ventana","text":"Si maximizamos la ventana a pantalla completa , ser\u00e1 como estar usando la m\u00e1quina virtual solamente. Esto para algunos puede resultar m\u00e1s c\u00f3modo. Pueden probarlo presionando las teclas Ctrl derecho + F juntas.","title":"Maximizar la ventana"},{"location":"instructivos/tipsVM/#acceso-a-la-linea-de-comandos","text":"Para acceder a la l\u00ednea de comandos hay tres formas: Forma 1: Inicio --> Herramientas del sistema --> LXTerminal Forma 2: Presionar las teclas Ctrl + Alt + T , las tres juntas. Ctrl y Alt tienen que ser los de la izquierda. Forma 3: Presionando la tecla F4 en la carpeta donde nos encontremos.","title":"Acceso a la l\u00ednea de comandos"},{"location":"instructivos/tipsVM/#cambiar-el-layout-del-teclado","text":"Para cambiar el layout del teclado: Click derecho en el panel: Seleccionar A\u00f1adir/quitar elementos del panel Seleccionar A\u00f1adir --> Agente de distribuci\u00f3n del teclado Hacer click en A\u00f1adir y cerrar la ventana. En el panel aparecer\u00e1 al lado del bot\u00f3n de apagado la bandera espa\u00f1ola, click derecho sobre la bandera y seleccionar la primera opci\u00f3n: Configuraci\u00f3n de Agente de distribuci\u00f3n de teclado Se abrir\u00e1 una ventana. Destildar la opci\u00f3n: Mantener las distribuciones del sistema y se habilitar\u00e1n las opciones: En Distribuciones del teclado elegir A\u00f1adir y busca en la lista el teclado correspondiente. Los m\u00e1s comunes son: Espa\u00f1ol (es) Espa\u00f1ol latinoamericano (latam) Ingl\u00e9s (EE.UU.) (us) Si no sab\u00e9s cual es: pod\u00e9s chequear algunos teclados en Wiki en la secci\u00f3n QUERTY. Selecciona el que corresponda y haz click en Aceptar. Volver\u00e1 a la ventana anterior donde puedes subir la configuraci\u00f3n que desees usar (o quitar la que no quieres usar). 8. Si dejaste m\u00e1s de una configuraci\u00f3n, haciendo click sobre la banderita en el panel pod\u00e9s cambiar a las distintas configuraciones (va cambiando la etiqueta).","title":"Cambiar el layout del teclado"},{"location":"instructivos/tipsVM/#acceso-a-internet","text":"Es necesario que la m\u00e1quina virtual tenga acceso a internet. Para configurarlo: Van a Settings / Configuraci\u00f3n --> Network / Red Habilitan en la pesta\u00f1a Adapter 1 la opci\u00f3n Enable Network Adapter Enable Network Adapter tiene que estar tildado.","title":"Acceso a Internet"},{"location":"instructivos/tipsVM/#copiar-y-pegar-de-maquina-host-a-maquina-virtual-y-viceversa","text":"Para copiar y pegar de la m\u00e1quina host (es decir, SUS compus f\u00edsicas) a la m\u00e1quina virtual (la de la materia) tienen que: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos --> Shared Clipboard / Portapapeles Compartido y seleccionan Bidirectional / Bidireccional","title":"Copiar y pegar de m\u00e1quina host a m\u00e1quina virtual y viceversa"},{"location":"instructivos/tipsVM/#compartir-una-carpeta-con-la-maquina-host","text":"Una manera simple de compartir archivos entre la m\u00e1quina host (es decir, SUS compus f\u00edsicas) y la m\u00e1quina virtual o viceversa es crear una carpeta compartida, para esto: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos --> Shared Folder / Carpetas Compartidas y seleccionan Shared Folders Settings / Preferencias de carpetas compartidas . Se les abrir\u00e1 una ventana, donde deben elegir la carpetita con el s\u00edmbolo m\u00e1s que est\u00e1 a la derecha para agregar una carpeta compartida y se les abrir\u00e1 una nueva ventana. Folder Path: Indican la ruta a la carpeta que van a compartir en la m\u00e1quina host (SU computadora). Folder Name: El nombre con el que aparecer\u00e1 la carpeta en la m\u00e1quina virtual Auto-mount: Tiene que estar tickeado. Make Permanent: Tiene que estar tickeado. Click en Ok. Deber\u00edan ver algo similar a lo siguiente: Click en Ok. Se les debe haber creado un \u00edcono en el escritorio de la m\u00e1quina virtual con el nombre que eligieron en Folder Name Si hacen click, deber\u00edan poder acceder a la carpeta. Si aparece un cartel donde dice que no tienen los permisos necesarios, entonces hacen lo siguiente. Abren una terminal utilizando las teclas: Ctrl + Alt + T Escriben lo siguiente en la terminal: sudo usermod -a -G vboxsf $( whoami ) Si les pide una clave es unsam","title":"Compartir una carpeta con la m\u00e1quina host"},{"location":"practicos/inicio/","tags":["practicos"],"text":"Hola! Esta es la p\u00e1gina de inicio de los pr\u00e1cticos de este curso. A continuaci\u00f3n una lista de datos \u00fatiles. Consultas y Canales de Comunicaci\u00f3n Por email a la direcci\u00f3n de la JTP. en Slack pueden mandar mensajes a todo el grupo en los distintos canales. Informes Alguno de los trabajos pr\u00e1cticos de la cursada requieren una resoluci\u00f3n de un problema a informar. Al final de la gu\u00eda de trabajos pr\u00e1cticos se indicar\u00e1 el problema a resolver. La funci\u00f3n de los informes es: Que ustedes puedan aplicar los conocimientos y herramientas adquiridas durante la cursada a un problema puntual Evaluar la capacidad t\u00e9cnica para producir resultados, as\u00ed como tambi\u00e9n el criterio a la hora de evaluar el significado biol\u00f3gico de los mismos y la comprensi\u00f3n de las potencialidades y limitaciones de los algoritmos o herramientas empleadas. Evaluar la capacidad de elaborar informes Cada informe de cada trabajo pr\u00e1ctico puede (o no) estar relacionado con alguno anterior. Por lo tanto: Guarden los archivos y sean prolijos. El trabajo deber\u00e1 ser realizado con las mismas personas con la que realizan los trabajos pr\u00e1cticos normalmente. Es UNA entrega por grupo. Esta entrega deber\u00e1 ser realizada en tiempo y forma, por correo electr\u00f3nico a la persona encargada del trabajo pr\u00e1ctico. Formato Correo Electr\u00f3nico de Entrega de TP Cuando env\u00edan el correo. El asunto del correo debe ser: Entrega Informe TP01 - Grupo 01 Durante la cursada deber\u00e1n ir entregando de forma individual los ejercicios correspondientes a cada trabajo pr\u00e1ctico, los cuales ser\u00e1n aprobados o desaprobados. En caso de estar desaprobado tendr\u00e1n una semana despu\u00e9s de la devoluci\u00f3n para re-entregarlo. Formato a respetar para los informes Los informes deben constar de: 1 hoja de Car\u00e1tula. En esta hoja se incluir\u00e1: N\u00famero y t\u00edtulo del trabajo pr\u00e1ctico (respetar el n\u00famero que figura en la gu\u00eda) N\u00famero de grupo Nombre y Apellido y direcci\u00f3n de correo electr\u00f3nico de cada uno de los integrantes del grupo Fecha de entrega 5 hojas m\u00e1ximo. En estas 5 hojas se debe incluir: Introducci\u00f3n: 1 hoja m\u00e1ximo y NO debe ser la que se utiliza en el trabajo pr\u00e1ctico que entregan los docentes. Objetivo general y objetivos espec\u00edficos M\u00e9todos y resultados Discusi\u00f3n Bibliograf\u00eda (10 referencias m\u00e1ximo) Anexo. No hay l\u00edmite de hojas pero se tendr\u00e1 en cuenta si es referenciado o no en el cuerpo del informe (es decir, no pongan cosas innecesarias) Respecto del formato: Se deber\u00e1n entregar en archivos PDFs nombrados de la siguiente manera: TPXX_GRUPO_XX.pdf (por ejemplo, TP08_GRUPO_01.pdf ) Tama\u00f1o de hoja: A4 Interlineado: 1.15 Letra y tama\u00f1o de letra: Arial 11pts Margen: 2 cm Aviso El formato ser\u00e1 considerado en la puntuaci\u00f3n final del trabajo pr\u00e1ctico Consulten siempre que tengan dudas !!","title":"Inicio"},{"location":"practicos/inicio/#hola","text":"Esta es la p\u00e1gina de inicio de los pr\u00e1cticos de este curso. A continuaci\u00f3n una lista de datos \u00fatiles.","title":"Hola! "},{"location":"practicos/inicio/#consultas-y-canales-de-comunicacion","text":"Por email a la direcci\u00f3n de la JTP. en Slack pueden mandar mensajes a todo el grupo en los distintos canales.","title":"Consultas y Canales de Comunicaci\u00f3n"},{"location":"practicos/inicio/#informes","text":"Alguno de los trabajos pr\u00e1cticos de la cursada requieren una resoluci\u00f3n de un problema a informar. Al final de la gu\u00eda de trabajos pr\u00e1cticos se indicar\u00e1 el problema a resolver. La funci\u00f3n de los informes es: Que ustedes puedan aplicar los conocimientos y herramientas adquiridas durante la cursada a un problema puntual Evaluar la capacidad t\u00e9cnica para producir resultados, as\u00ed como tambi\u00e9n el criterio a la hora de evaluar el significado biol\u00f3gico de los mismos y la comprensi\u00f3n de las potencialidades y limitaciones de los algoritmos o herramientas empleadas. Evaluar la capacidad de elaborar informes Cada informe de cada trabajo pr\u00e1ctico puede (o no) estar relacionado con alguno anterior. Por lo tanto: Guarden los archivos y sean prolijos. El trabajo deber\u00e1 ser realizado con las mismas personas con la que realizan los trabajos pr\u00e1cticos normalmente. Es UNA entrega por grupo. Esta entrega deber\u00e1 ser realizada en tiempo y forma, por correo electr\u00f3nico a la persona encargada del trabajo pr\u00e1ctico. Formato Correo Electr\u00f3nico de Entrega de TP Cuando env\u00edan el correo. El asunto del correo debe ser: Entrega Informe TP01 - Grupo 01 Durante la cursada deber\u00e1n ir entregando de forma individual los ejercicios correspondientes a cada trabajo pr\u00e1ctico, los cuales ser\u00e1n aprobados o desaprobados. En caso de estar desaprobado tendr\u00e1n una semana despu\u00e9s de la devoluci\u00f3n para re-entregarlo.","title":"Informes"},{"location":"practicos/inicio/#formato-a-respetar-para-los-informes","text":"Los informes deben constar de: 1 hoja de Car\u00e1tula. En esta hoja se incluir\u00e1: N\u00famero y t\u00edtulo del trabajo pr\u00e1ctico (respetar el n\u00famero que figura en la gu\u00eda) N\u00famero de grupo Nombre y Apellido y direcci\u00f3n de correo electr\u00f3nico de cada uno de los integrantes del grupo Fecha de entrega 5 hojas m\u00e1ximo. En estas 5 hojas se debe incluir: Introducci\u00f3n: 1 hoja m\u00e1ximo y NO debe ser la que se utiliza en el trabajo pr\u00e1ctico que entregan los docentes. Objetivo general y objetivos espec\u00edficos M\u00e9todos y resultados Discusi\u00f3n Bibliograf\u00eda (10 referencias m\u00e1ximo) Anexo. No hay l\u00edmite de hojas pero se tendr\u00e1 en cuenta si es referenciado o no en el cuerpo del informe (es decir, no pongan cosas innecesarias) Respecto del formato: Se deber\u00e1n entregar en archivos PDFs nombrados de la siguiente manera: TPXX_GRUPO_XX.pdf (por ejemplo, TP08_GRUPO_01.pdf ) Tama\u00f1o de hoja: A4 Interlineado: 1.15 Letra y tama\u00f1o de letra: Arial 11pts Margen: 2 cm Aviso El formato ser\u00e1 considerado en la puntuaci\u00f3n final del trabajo pr\u00e1ctico Consulten siempre que tengan dudas !!","title":"Formato a respetar para los informes"},{"location":"practicos/resumen/","tags":["practicos","fin","resumen"],"text":"This is the end ... Bueno, hemos llegado al final de la parte pr\u00e1ctica del curso. Felicitaciones! quer\u00e9s seguir explorando t\u00f3picos y ganando experiencia, te dejamos a continuaci\u00f3n algunos links a distintos materiales y recursos: Libros Libro 1 Libro 2 Online Material 1 Material 2 Presencial Presencial 1 Presencial 2 Grupos Asociaci\u00f3n Argentina de Bioinform\u00e1tica y Biolog\u00eda Computacional (A 2 B 2 C) RSG-Argentina","title":"Resumen"},{"location":"practicos/resumen/#this-is-the-end","text":"Bueno, hemos llegado al final de la parte pr\u00e1ctica del curso. Felicitaciones! quer\u00e9s seguir explorando t\u00f3picos y ganando experiencia, te dejamos a continuaci\u00f3n algunos links a distintos materiales y recursos: Libros Libro 1 Libro 2 Online Material 1 Material 2 Presencial Presencial 1 Presencial 2 Grupos Asociaci\u00f3n Argentina de Bioinform\u00e1tica y Biolog\u00eda Computacional (A 2 B 2 C) RSG-Argentina","title":"This is the end ... "},{"location":"practicos/tpsGrid/","text":"TP 1 hola","title":"tpsGrid"},{"location":"practicos/1-Trabajo-Practico-Uno/","text":"TP 1. Introducci\u00f3n a Lubuntu, Bash y Programaci\u00f3n Materiales TO DO Docente Rehacer Ej 3 Cambiar imagen TP Ver ortografia? (acentos basicamente) Recursos Online Command-line bootcamp Programando en Bash Comando AWK Consola de Linux online (y otra ) Compilador de Bash online (y otro ) Objetivos Familiarizarse un poco con Lubuntu y su estructura de directorios Familiarizarse con el uso b\u00e1sico de los comandos de Bash Familiarizarse con los bloques l\u00f3gicos b\u00e1sicos de la programaci\u00f3n Introduccion al Tema En este trabajo pr\u00e1ctico vamos a aprender a usar la l\u00ednea de comando de Lubuntu (tambi\u00e9n referida como terminal , consola o shell ). Para muchos de nosotros, que estamos acostumbrados a la interfaz gr\u00e1fica de sistemas operativos como los de Windows o GUI (por las siglas en ingles: Graphic User Interface ), la linea de comando puede parecer un desaf\u00edo, pero con pr\u00e1ctica y algo de paciencia descubrir\u00e1n que puede resultar amena. Su uso tiene dos ventajas destacables para nuestro campo: Nos permitir\u00e1 trabajar en entornos o programas sin interfaz gr\u00e1fica (GUI) Mediante el uso de programas o scripts , nos permitir\u00e1 automatizar procesos, acelerando el trabajo y minimizando la cantidad de errores que podemos cometer con tareas repetitivas \u00bfUnix? \u00bfLinux? \u00bfUbuntu? \u00bfLubuntu? Dependiendo que tan familiares esten con Linux, todos estos nombres pueden resultar un poco confusos. Vamos por partes: Unix es un sistema operativo creado en 1969 por dos programadores estadounidenses que trabajaban para Bell Labs, una compan\u00eda de investigaci\u00f3n y desarrollo cient\u00edfico que en su momento era propiedad de AT&T (compa\u00f1ia estadounidense de tel\u00e9fonos). Al ser un sistema operativo portable, multitarea y multiusuario se hizo r\u00e1pidamente popular y se difundi\u00f3 por instituciones acad\u00e9micas y empresas Debido a su popularidad, otros programadores quisieron hacer sus propias versiones de sistemas operativos basados en Unix, pero como sus sistemas operativos ten\u00edan c\u00f3digo original de Unix, AT&T los demand\u00f3, paralizando esta tendenc\u00eda En 1983 se crea el proyecto GNU con el objetivo de crear un sistema operativo similar a Unix, pero gratis y de c\u00f3digo abierto. GNU significa \"GNU's Not Unix\" (es un anagrama recursivo, los programadores se divierten barato). Hacia el fin de los 80s el proyecto ya ten\u00eda casi todos los programas que necesitaba, pero les faltaba conseguir un buen kernel (principal responsable de facilitar a los distintos programas acceso seguro al hardware de la computadora) En 1991, Linus Torvalds empieza a crear lo que terminar\u00eda siendo Linux , un sistema operativo con su propio kernel que usaba muchas de los programas del proyecto GNU. Esta versi\u00f3n se volvi\u00f3 r\u00e1pidamente la m\u00e1s popular de todas las versiones de GNU, llevando a que en 1993 se creara el Debian Project , un proyecto comunal con el objetivo de mejorar una distrubuci\u00f3n de Linux que denominaron Debian GNU/Linux (tambi\u00e9n llamada simplemente Debian ). Ubuntu es una distribuci\u00f3n de Linux creada en 2004 basada en Debian. Al d\u00eda de la fecha es la distrubuci\u00f3n m\u00e1s popular de Linux con m\u00e1s del 50% de los usuarios. Lubuntu es una distribuci\u00f3n de Linux creada en 2009 basada Ubuntu. Es bastante similar a Ubuntu en todo lo que es consola, pero tiene una interfaz gr\u00e1fica que consume menos recursos, haciendolo ideal para maquinas m\u00e1s viejas (o en nuestro caso, maquinas virtuales que pesen lo menos posible). Estructura de directorios de Lubuntu La organizaci\u00f3n de archivos en Ubuntu y Lubuntu es bastante diferente a la de Windows. Si bien no vamos a detallar completamente toda la estructura y que es cada carpeta (porque el 95% no lo van a usar en esta materia), es importante tener una idea de lo b\u00e1sico: / Carpeta raiz, o root . Contiene al resto de las carpetas /etc Configuraciones del sistema para todos los usuarios (mucho cuidado al tocar) /home Ubicaci\u00f3n de los directorios de los diferentes usuarios (o en este caso el \u00fanico usuario) /home/ibioinfo Directorio del usuario ibioinfo . Es el lugar donde van a trabajar la mayor\u00eda del tiempo (incluye tanto el Escritorio como Documentos) y donde se abre por defecto la terminal (m\u00e1s sobre esto en un ratito). Comunmente referida como home directory o home del usuario ibioinfo /media Si fuera una computadora normal (no VM) aca aparecer\u00edan los pendrives. En nuestro caso aca aparecen por defecto las carpetas compartidas con la PC host /tmp Ubicaci\u00f3n de los archivos temporales de los programas /var Ubicaci\u00f3n de los archivos variables de los programas, como logs, bases de datos, paginas webs, etc /var/log Probablemente la subcarpeta m\u00e1s usada de /var . Contiene los logs de los programas (que a veces es la \u00fanica forma de saber porque algo no anduvo) Esto es simplemente un vistazo r\u00e1pido. Si quieren la lista completa de subdirectorios de Lubuntu la pueden encontrar en esta p\u00e1gina , pero tengan en cuenta que tocar cualquier cosa fuera de /home conlleva la posibilidad de arruinar la computadora. En esta materia vamos a usar principalmente /home y /media . L\u00ednea de comando Como ya dijimos en la introducci\u00f3n la l\u00ednea de comando tiene varios nombres, y en esta guia nos vamos a referir a ella como terminal o consola . Hay varias formas de abrir la terminal: Desde cualquier lado: Ctrl + Alt + T Desde cualquier lado: Inicio (menu de abajo a la izquierda) Herramientas del sistema LXterminal Desde afuera de una carpeta: Boton derecho en la carpeta Abrir en el terminal Desde adentro de una carpeta: Herramientas Abrir la carpeta actual en un terminal (o apretar F4 ) La terminal funciona como un explorador de archivos que se mueve entre las carpetas. Los primeros dos m\u00e9todos van a abrir la terminal en /home/ibioinfo , mientras que los \u00faltimos dos m\u00e9todos van a abrir la terminal en la carpeta elegida. Si en algun momento les decimos que abran la terminal y no aclaramos otra cosa nos referimos a abrirla en /home/ibioinfo . Abran la terminal en /home/ibioinfo y deberian ver algo as\u00ed: ibioinfo@ibioinfo-VirtualBox:~$ Donde ibioinfo es el nombre del usuario actual e ibioinfo-VirtualBox el nombre de la computadora (que justo en este caso son similares, pero no es necesario). El ~ despu\u00e9s de los dos puntos parece ser parte de la terminal, pero en realidad est\u00e1 indicando la carpeta en la que se encuentra en este momento. Como cada usuario trabaja mas que nada en su carpeta, Lubuntu le asigna el s\u00edmbolo ~ a esa carpeta para simplificar los directorios que aparecen en la terminal. En nuestro caso ~ equivale a /home/ibioinfo y puede ser que nos refiramos a esa carpeta como su home directory o simplemente su home . Info Aclaraciones por si son fan\u00e1ticos de los atajos de teclado: Para copiar texto en la terminal hay que usar Ctrl + Shift + C . En en resto de Lubuntu es normal ( Ctrl + C ). Para pegar texto en la terminal hay que usar Ctrl + Shift + V . En en resto de Lubuntu es normal ( Ctrl + V ). De apretar Ctrl + C en la terminal le estan diciendo que corte forzosamente el programa que est\u00e1 corriendo. Si bien hay que tener cuidado con no cortar un proceso importante a la mitad, este atajo del teclado es util si un programa se te qued\u00f3 colgado o similar. Bash: Ubicarse en la terminal La terminal acepta una variedad de comandos en lenguaje Bash , que es el lenguaje de la terminal de GNU. El formato general de los comandos es: comando -opciones parametro1 parametro2 etc Donde comando es el nombre del programa a correr, opciones son comunmente una o m\u00e1s letras luego de un gui\u00f3n que indican alguna modificaci\u00f3n a las opciones por defecto del programa, y los diferentes parametros son cosas que necesita el programa para correr, como puede ser un archivo que esta leyendo. Todo esto va a ir quedando m\u00e1s claro con los diferentes ejemplos. Usted est\u00e1 aqu\u00ed Al ser la terminal b\u00e1sicamente un explorador de archivos, es necesario saber en que carpeta estoy y que hay adentro de dicha carpeta. pwd es un comando que imprime el directorio actual en la terminal ( P rint W orking D irectory). Pruebenlo a ver si ~ era realmente /home/ibioinfo : pwd Bien, ahora que ganamos su confianza, vean que hay adentro de esa carpeta usando ls : ls Si bien por ahora todo lo que ven son carpetas azules, tengan en cuenta que ls va a colorear diferentes tipos de archivos (y de carpetas) de diferentes colores. Este comando es una buena oportunidad de entender un poco mas sobre opciones y parametros . Por defecto ls lista los archivos de la carpeta actual, pero de darle un par\u00e1metro muestra los de dicha carpeta. Prueben correr lo siguiente: ls /etc/perl/Net En este caso est\u00e1n viendo los contenidos de una carpeta diferente a donde estamos parados en la terminal. Si yo quisiera mas informaci\u00f3n sobre los archivos que se encuentran dentro de esta carpeta puedo hacer: Tip El pr\u00f3ximo comando es muy parecido al anterior. Pueden usar Up y Down en su terminal para navegar por los ultimos comandos utilizados y modificar lo necesario. ls -l /etc/perl/Net Donde la opcion -l agrega informaci\u00f3n sobre los permisos del archivo (quien puede leerlo o modificarlo). Con un poco de suerte esta es la primera y ultima vez en toda la materia que vamos a hablar de los permisos de Lubuntu (y de como a veces dan dolores de cabeza). Info La lista completa de las opciones para cada comando se puede ver con el comando man (de manual ). En este caso ser\u00eda man ls . Moverse entre las carpetas Ahora que ya saben donde estan y que carpetas hay adentro es importante saber como moverse entre ellas. Esto se hace principalmente con el comando cd . Asegurense que la terminal esta en su home y usen ls para ver nuevamente la lista de carpetas dentro. Primero vamos a la carpeta Escritorio y vemos que archivos hay adentro, para eso hacer: Tip Tab funciona como autocompletar en la consola. Al escribir el pr\u00f3ximo comando prueben escribir solo cd Es y apretar Tab cd Escritorio Ahora veran que la parte de la izquierda de la terminal cambio a: ibioinfo@ibioinfo-VirtualBox:~/Escritorio$ Indicando que estan en /home/ibioinfo/Escritorio . Usen el comando adecuado para ver que archivos hay adentro de esta carpeta. Ahora quiero volver a su home y para eso escribo: cd .. Vean ahora en que carpeta est\u00e1n. En todo lo que es Ubuntu y Lubuntu .. significa \"una carpeta para arriba\". \u00bfQu\u00e9 pasa entonces si estan en /home/ibioinfo/Escritorio/TP1/Version3/Intento2/Edicion1 y quieren volver a su home ? \u00bfTienen que escribir cd .. 5 veces? Tecnicamente funciona, pero por defecto el comando cd te lleva a tu home si no le das ningun par\u00e1metro. cd Paths relativos y absolutos Cuando corrimos cd ls /etc/perl/Net estaban ubicados en su home ( /home/ibioinfo ) y si vemos las carpetas dentro de home resulta que no existe ninguna llamada /etc . \u00bfD\u00f3nde est\u00e1 la carpeta /etc en relaci\u00f3n a /home/ibioinfo ? (ver Estructura de directorio de Lubuntu arriba si no se acuerdan) \u00bfC\u00f3mo pudimos acceder a /etc/perl/Net si la terminal estaba ubicada en una carpeta sin ninguna relaci\u00f3n? La respuesta a todo esto son los paths relativos y absolutos: Paths absolutos El path /etc/perl/Net es lo que se llama un path absoluto ; no importa donde est\u00e9 en la terminal en ese momento, /etc/perl/Net va a siempre apuntar al mismo lugar y el comando ls /etc/perl/Net va a siempre andar bien. Una forma f\u00e1cil de identificar paths absolutos es que siempre empiezan en el root o / . Recuerden que ~ apunta a /home/ibioinfo , y por lo tanto el comando cd ~/Escritorio est\u00e1 usando un path absoluto, ya que sin importar de donde se use va a funcionar y va a ir a /home/ibioinfo/Escritorio . Paths relativos Ahora bien, cuando nosotros estabamos ubicados en home y corrimos cd Escritorio pudimos entrar a /home/ibioinfo/Escritorio , pero si volvieramos a correr cd Escritorio el comando no funcionar\u00eda, ya que no existe la carpeta /home/ibioinfo/Escritorio/Escritorio . Esto se debe a que en este caso Escritorio es un path relativo a la ubicaci\u00f3n actual de la terminal. Otra forma de escribir paths relativos en Ubuntu es empezar con . , simbolo que indica \"la carpeta actual\". Volviendo al ejemplo anterior, es equivalente escribir cd Escritorio o cd ./Escritorio . Otro caso de path relativo que ya vimos es cd .. , donde apunta a la \"carpeta de arriba\" de la posici\u00f3n actual de la terminal. Ambos tipos de paths tienen sus ventajas y desventajas. Los paths absolutos tienen la ventaja de funcionar siempre, pero al usar toda la estructura toman m\u00e1s tiempo de escribir y son mas suceptibles a cambios de directorios (si muevo un archivo de lugar tengo que reescribir el comando). Por otro lado los paths relativos son mucho m\u00e1s r\u00e1pidos de escribir y en muchos casos funcionan en diferentes ubicaciones (o computadoras), pero al depender de la ubicaci\u00f3n de la terminal esto puede causar problemas si pienso que estoy en una carpeta pero estoy realmente en otra. En esta cursada vamos a usar ambos para diferentes casos. Ejercicio 1. Ubicarse en la terminal Identifique cual o cuales de los siguientes comandos te llevar\u00edan desde cualquier carpeta al home del usuario ibioinfo . cd ~ cd home/ibioinfo cd home / ibioinfo cd / home / ibioinfo cd /home/ibioinfo cd /ibioinfo/home cd ././ibioinfo cd ./home/ibioinfo \u00bfCambiarian la respuesta en algunos de los puntos anteriores si el usuario logueado actualmente en la computadora no es ibioinfo ? \u00bfPor qu\u00e9? Identifique en la siguiente lista cuales paths son paths relativos : /var/foo/tom_jerry var/foo/tom_jerry /home/tom/Documentos/catfood.png ../../jerry/Documentos/cheese.png ./Videos/Capitulos/ ~/Videos/Capitulos/ ./Descargas/tom_jerry_cap1.torrent /home/tom/Descargas/tom_jerry_cap1.torrent Bash: Crear y eliminar Todo lo que es crear, copiar, mover y eliminar archivos y directorios se puede hacer usando la interfaz gr\u00e1fica como lo har\u00edan en cualquier otro sistema operativo, sin embargo hay situaciones (por ejemplo dentro de un script ) donde es necesario hacerlo mediante la consola. Si bien en esta guia le vamos a pedir que usen los siguientes comandos para pr\u00e1cticarlos, en el d\u00eda a d\u00eda hagan lo que les sea m\u00e1s c\u00f3modo. Crear y eliminar directorios Los directorios se pueden crear con: mkdir FOLDER Info En el resto de la guia van a aparecer ciertas palabras en may\u00fascula en los c\u00f3digos, como por ejemplo FOLDER . Estas palabras son variables o placeholders que tienen que ser reemplazadas por lo que corresponda. Donde FOLDER es un path absoluto o relativo con el nombre de la carpeta. Prueben ir en su terminal a /home/ibioinfo/Documentos y usar el comando: mkdir testfolder Y vean si efectivamente apareci\u00f3 una carpeta nueva. Luego usen el comando de nuevo a ver que pasa. Para eliminar directorios se puede usar: rmdir FOLDER Por defecto este comando solo puede eliminar directorios vacios (lo cual puede no ser muy util, pero a la vez es seguro). Usen el comando anterior y borren la carpeta que acaban de crear (reemplacen FOLDER por lo que corresponda). Prueben correr el comando una vez m\u00e1s a ver que pasa. Tip muy importante Este es un buen momento para hablar de que nombres ponerles a las cosas que uno crea un Lubuntu. Si bien cualquier nombre funciona en un principio, por un tema de compatibilidad entre los diferentes programas que pueden llegar a usar se recomienda: Muy recomendado: No usar comillas dobles, simples o ap\u00f3strofes Recomendado: No usar espacios, par\u00e9ntesis, \u00d1, acentos, di\u00e9resis u otros diacr\u00edticos (el espacio comunmente se remplaza por un gui\u00f3n o gui\u00f3n bajo) Crear y eliminar archivos Hay varias formas de crear archivos en Lubuntu y la mas simple es touch FILE , que crea un archivo de texto vacio donde FILE es el nombre del archivo (que puede incluir un path antes). Para entender lo que quiero decir vayan a su home y corran: touch Documentos/testfile Aca estoy usando un path relativo para crear el archivo. Se van a dar cuenta que el archivo no tiene extensi\u00f3n (por ejemplo .txt ). En Lubuntu van a ver muchos archivos de texto sin extensi\u00f3n, pero se la pueden agregar sin problema si quieren. Entren a Documentos y vean si el archivo realmente existe. Lo que le vamos a ense\u00f1ar a continuaci\u00f3n es probablemente uno de los comandos m\u00e1s peligrosos de Bash si se usa incorrectamente. rm es el comando usado para eliminar archivos (o carpetas, o discos enteros) y es la base de cientos de historias en internet de como alguien se qued\u00f3 sin trabajo. El comando se usa: rm FILE Donde FILE es el archivo a eliminar. rm no les va a pedir confirmaci\u00f3n y el archivo va a ser borrado permanentemente (si borran archivos desde la interfaz gr\u00e1fica s\u00ed hay confirmaci\u00f3n y s\u00ed van a la papelera). Entonces, con cuidado, asegurense que estan en Documentos y borren el archivo testfile . Danger \u00bfSe entendi\u00f3 que hay que tener cuidado con rm ? \u00bfSi? Buenisimo. Mover y copiar archivos y carpetas Adentro de Documentos creen una carpeta llamada testfolder2 y dos archivos de texto vacio, uno llamado testfile_mv y otro testfile_cp . Nuestro objetivo va a ser mover testfile_mv a la carpeta testfolder2 y copiar testfile_cp a la misma carpeta. Los archivos se mueven con mv y se copian con cp y ambos tienen un formato similar que es mv ARCHIVO_ORIGEN FOLDER_DESTINO Donde en este caso ARCHIVO_ORIGEN es el archivo a mover y FOLDER_DESTINO el path a donde moverlo. Prueben entonces mover testfile_mv y copiar testfile_cp adentro de la carpeta testfolder2 . Tip Usando la opci\u00f3n -i al comando, les va a pedir confirmaci\u00f3n si el archivo de destino ya existe. Recuerden que pueden usar man mv o man cp para ver mas opciones. Estos dos comandos tambi\u00e9n pueden ser usados como: mv ARCHIVO_ORIGEN ARCHIVO_DESTINO En este caso ARCHIVO_DESTINO no es una carpeta, sino un archivo adentro del FOLDER_DESTINO , lo que permite renombrar el ARCHIVO_ORIGEN al copiarlo / moverlo. Para que se entienda mejor este uso, ubiquens\u00e9 en Documentos y corran: cp testfile_cp testfolder2/testfile_cp_nuevo Con lo cual acabo de copiar testfile_cp de nuevo a la carpeta testfolder2 , pero ahora con otro nombre. Interesantemente, usar mv de esta manera es la forma de Ubuntu de renombrar archivos desde la terminal. Prueben entrar a testfolder2 y corran: mv testfile_cp_nuevo testfile_cp_otroNombre Y vean que pas\u00f3. Una vez que todo haya funcionado bien, usen rm para eliminar todos los testfile uno a uno y luego usen rmdir para eliminar testfolder2 . Ambos comandos funcionan tambi\u00e9n para copiar, mover y renombrar carpetas, en cuyo caso el formato es: mv FOLDER_ORIGEN FOLDER_DESTINO Danger Hay que ser cuidadosos al usar mv y cp ya que si el archivo de destino ya existe lo van a sobreescribir sin preguntar antes. A ambos comandos se le puede agregar la opci\u00f3n -i para que pregunte antes de sobreescribir de ya existir el archivo de destino. Bash: Archivos de texto Escribir archivos de texto En Lubuntu hay varias formas de escribir en archivos de texto, pero una de las m\u00e1s \u00fatiles para nosotros va a ser el > quien redirige la salida de informaci\u00f3n de la consola. Se usa: comando -opciones parametro1 parametro2 > ARCHIVO_DESTINO Donde lo de la izquierda de > es el comando como lo correr\u00edas normalmente y ARCHIVO_DESTINO es un archivo donde va a ser guardada la salida de ese comando (lo que normalmente ver\u00edan en la consola). Para entender un poco m\u00e1s, vayan a su home y corran: ls -l > Documentos/output_de_ls Ver\u00e1n que en un principio parece que no paso nada. Entren ahora a Documentos y van a ver que hay un nuevo archivo con el nombre output_de_ls . Vamos a abir el archivo usando Leafpad , el editor de texto de la interfaz \u01f5r\u00e1fica de Lubuntu. Asegurandose que estan Documentos , en la consola escriban: leafpad output_de_ls Van a ver que se abre el editor de texto de igual forma que si ubieran hecho doble click en el \u00edcono en el explorador de archivos de la GUI. Puede ser que aparezca un warning o advertencia en la consola, pero la podemos ignorar. Leafpad funciona como un editor de texto bastante normal. Agreguen una nueva linea abajo de todo (con cualquier texto) y guarden el archivo. Al momento sabemos como guardar en un archivo de texto cualquier salida de un comando de Lubuntu, pero, \u00bfc\u00f3mo hacemos para poner lo que nosotros queremos en un archivo de texto? Simple, \u00a1con otro comando de Lubuntu! El comando echo hace lo que su nombre indica y devuelve por la terminal el texto que le pases. Prueben escribir echo TEXTO , donde TEXTO es cualquier oraci\u00f3n, por ejemplo: echo Probando, uno, dos, tres Tal vez ya se dieron cuenta, pero combinando echo con > podemos escribir nuestros propios archivos de texto desde la terminal. Asegurandose que estan adentro de Documentos , corran: echo Esta es la primera linea del documento > mi_documento Confirmen que se escribi\u00f3 el archivo y que tiene el texto adentro. \u00bfQu\u00e9 piensan que pasa si ahora corr\u00f3 el siguiente comando? Pruebenl\u00f3: echo Quiero agregar otra linea al documento > mi_documento Usen Leafpad para leer el documento. Van a ver que la primera linea que agregamos desapareci\u00f3. Esto es porque cada uso de > sobreescribe el archivo. Si queremos agregar otra linea a un documento que ya tiene informaci\u00f3n tenemos que usar el comando >> quien agrega el texto al archivo en una nueva linea al final sin modificar el contenido anterior. As\u00ed que ahora que sabemos esto podemos correr estos dos comandos: echo Esta es la primera linea del documento > mi_documento echo Esta es la segunda linea del documento >> mi_documento Y vean con Leafpad si funcion\u00f3 como quer\u00edamos. Danger Hay que ser cuidadosos al usar > ya que si el archivo de destino ya existe lo va a sobreescribir sin preguntar antes. Leer archivos de texto Qu\u00e9 comando usar al leer archivos de texto en la consola depende mucho de que tan largo es el archivo y que me interesa de \u00e9l: \u00bfTiene solo pocas lineas de texto? cat va a abrir el archivo y escribirlo todo en la terminal. \u00bfTiene muchas lineas de texto y quiero ver las primeras p\u00e1ginas a ver de que se trata? less va a abrir el archivo y mostrar solo el texto que entra en la terminal. Aprentando Space pasa a la pr\u00f3xima p\u00e1gina y apretando Q deja de leerlo. \u00bfTiene muchas lineas de texto y quiero ver solo las primeras lineas? head te muestra las primeras 10 lineas del archivo. Se puede especificar la cantidad de lineas agregando una opci\u00f3n, por ejemplo, head -3 muestra solo las primeras 3 l\u00edneas. \u00bfTiene muchas lineas de texto y quiero ver solo las \u00faltimas lineas? tail te muestra las \u00faltimas 10 l\u00edneas del archivo. Este n\u00famero se puede cambiar de la misma forma que para head . \u00bfNo saben que tan largo es un archivo dado? Pueden averiguarlo con el comando wc , que devuelve el numero de lineas, palabras y letras (en ese orden) en el archivo. De pasarle la opci\u00f3n -l , el comando devuelve solo el n\u00famero de lineas. Todos estos funcionan de la forma: comando FILE Usando el archivo martin_fierro que se encuentra en los materiales del TP (boton al principio de todo), prueben los 5 comandos anteriores. Buscar palabras en archivos de texto Va a ser com\u00fan cuando trabajemos con tablas que nos interese encontrar filas con cierto valor y una forma r\u00e1pida de hacer eso es usar grep , comando al que le pasas una palabra o patr\u00f3n y busca filas dentro de un archivo que contengan dicha palabra o patr\u00f3n. En formato general el comando es: grep PALABRA FILE Usando el archivo martin_fierro con en que trabajamos en la secci\u00f3n anterior podemos correr: grep cantar martin_fierro Y vamos a ver todas las lineas del documento donde aparece la palabra \"cantar\". Hay mucho para hablar sobre grep , pero por ahora lo que nos va a importar es: La opci\u00f3n -v devuelve las l\u00edneas que no contienen PALABRA La opci\u00f3n -c devuelve el n\u00famero de l\u00edneas que contienen PALABRA Puedo buscar multiples palabras separand\u00f3las con | , por ejemplo, grep PALABRA1|PALABRA2 FILE Info Mencion\u00e9 antes que grep tambi\u00e9n funciona con patrones. Estos patrones son conocidos como Expresiones Regulares, o RegEx , y de hecho usar | para buscar multiples palabras es parte de ellos. Como este es un tema complejo y ya tenemos bastante que procesar no vamos a profundizar mas sobre ellos en este momento, pero explicaremos cualquier patr\u00f3n que usemos en la materia cuando aparezca. Combinar comandos En Bash es posible combinar comandos, lo que quiere decir pasarle la salida de un comando directamente como entrada a otro comando. Esto se hace dividiendo los diferentes comandos con | (o pipe ). Para entender un poco mejor veamos un ejemplo. Digamos que quiero ver las cuales de las primeras 10 lineas del archivo martin_fierro contienen la palabra \"cantar\". Para esto tengo que hacer: head -10 martin_fierro | grep cantar Fijense que en este caso parecer\u00eda que a grep no le estoy pasando ningun FILE , pero lo que pasa es que va usar como entrada la salida de head . De esta forma se puede concatenar cualquier cantidad de comandos que seran ejecutados de izquierda a derecha. Ejercicio 2. Archivos de texto Para este ejercicio vamos a seguir usando el archivo martin_fierro . \u00bfCu\u00e1ntas l\u00edneas tiene el archivo? \u00bfCu\u00e1ntas l\u00edneas contienen la palabra \"cantar\"? \u00bfCu\u00e1ntas l\u00edneas no contienen la palabra \"guitarra\"? Cree otro archivo de texto llamado martin_fierro_sinA con las l\u00edneas del archivo martin_fierro que no tengan la letra \"a\". Sin borrar el contenido y usando la consola, agregue una l\u00ednea al final de martin_fierro_sinA que indique el autor del Martin Fierro (Jos\u00e9 Hern\u00e1ndez). Volviendo al archivo original, \u00bfcu\u00e1ntas l\u00edneas no contienen la letra \"o\" y s\u00ed contienen la letra \"i\"? (Tip: use | para encadenar comandos) Bash: Programaci\u00f3n y Scripts Info A continuaci\u00f3n vamos a ver una peque\u00f1a introducci\u00f3n a la programaci\u00f3n usando Bash como lenguaje. El objetivo de lo que sigue no es aprenderse de memoria las estructuras y si hay que poner una llave aca o dejar un espacio all\u00e1, sino entender la l\u00f3gica detr\u00e1s de la programaci\u00f3n y como se pueden usar variables, condicionales y ciclos para obtener el resultado deseado. Scripts Los scripts de Bash son b\u00e1sicamente una lista de muchos de los comandos que nosotros corrimos en la terminal, pero escritos dentro de un archivo. Al ejecutar ese archivo todos los comandos dentro de \u00e9l ser\u00e1n corridos uno a uno de arriba a abajo. Para simplificar un poco la tarea y enfocarnos en lo que importa en esta secci\u00f3n vamos a utilizar la interfaz gr\u00e1fica de Lubuntu. Vayan a Documentos y creen un archivo llamado primer_programa.sh (Boton derecho Crear nuevo... Archivo vac\u00edo). Luego abran el archivo en Leafpad (doble click) y escriban lo siguiente: echo \"----------------\" echo \"| Hello world! |\" echo \"----------------\" Ahora salven en archivo, abran la terminal en esa carpeta ( F4 ) y vamos a ejecutar el script con: bash primer_programa.sh \u00a1Felicidades, ya pueden decir que son programadores! Como pudieron observar, los scripts de Bash se corren con el comando bash SCRIPT y al hacerlo se ejecutaron los 3 comandos echo en el orden que estaban dentro del script. Este tipo de scripts son \u00fatiles si quiero dejar evidencia de los comandos que corr\u00ed en Bash, ya sea para volver a hacerlo otro d\u00eda o para pasarselos a algui\u00e9n m\u00e1s y que los corra en su propia computadora; sin embargo, para realmente programar necesitamos m\u00e1s herramientas. Variables Las variables son palabras que guardan dentro de ellas un n\u00famero o un string (texto), entre otro tipo de valores posibles que veremos m\u00e1s adelante. Veamos un ejemplo de como usar variables (vean ambas pesta\u00f1as): C\u00f3digo C\u00f3digo con comentarios nombre = \"Unsamer\" echo \"Hola $nombre , \u00bftodo bien?\" # Las lineas que empiezan con # son comentarios, no afectan el c\u00f3digo y sirven para aclarar que estas # haciendo en tu programa o script # Al declarar una variable en Bash no se puede poner espacio entre la variable, el = y el valor # Las comillas se usan para indicar que lo de adentro es una cadena de caracteres, o *string* nombre = \"Unsamer\" # Cuando se usa la variable, se le agrega el prefijo $ echo \"Hola $nombre , \u00bftodo bien?\" \u00bfQu\u00e9 piensan que va a pasar de correr este c\u00f3digo en un script? Pruebenl\u00f3. Info Desgraciadamente Bash es muy estricto al momento de programar y perdona bastante poco (como por ejemplo el tema de tener un espacio m\u00e1s o menos). M\u00e1s adelante vamos a usar el lenguaje R que va a ser una de nuestras principales herramientas al momento de analizar y plotear datos y es mucho m\u00e1s amigable. En este momento pueden estar pensando que hubiera sido mucho m\u00e1s f\u00e1cil poner solo echo \"Hola Unsamer, \u00bftodo bien?\" y ahorrarme el tema de la variable. Tienen raz\u00f3n. Por ahora. \u00bfSe acuerdan de los parametros de los comandos de Bash? Al pasarle par\u00e1metros a un script de Bash estos se asignan automaticamente a variables llamadas $1 , $2 , etc. Editemos ahora nuestro c\u00f3digo anterior: C\u00f3digo C\u00f3digo con comentarios nombre = $1 echo \"Hola $nombre , \u00bftodo bien?\" # $1 es el primer parametro que se le pasa al script de Bash # Le estoy asignando el valor de una variable a otra variable. $1 sigue existiendo, pero no la uso m\u00e1s nombre = $1 # Podr\u00eda usar $1 directamente aca, pero as\u00ed se entiende mucho m\u00e1s lo que hace el c\u00f3digo al leerlo # (y para programas muy complicados esto es muy importante) echo \"Hola $nombre , \u00bftodo bien?\" Y ahora corran: bash SCRIPT \"NOMBRE\" Por si la versi\u00f3n gen\u00e9rica no queda claro, si el script se llamara saludo.sh y quiero conseguir el mismo resultado que antes habr\u00eda que correr: bash saludo.sh \"Unsamer\" Info Tecnicamente si estoy pasando solo una palabra las comillas no son necesarias, pero si el string que estoy pasando tiene un espacio tengo que ponerlas si o si. Hay bastante m\u00e1s para hablar de las variables . Existen muchos tipos m\u00e1s de variables, como booleanos (variable que es verdadera o falsa), arreglos (o vectores) y listas. Otros lenguajes de programaci\u00f3n hasta tienen variables m\u00e1s complejas que pueden almacenar tablas enteras. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre las variables en Bash se puede ver en esta p\u00e1gina . Condicionales Las variables son importantes, pero gran parte de la programaci\u00f3n es controlar el \"flujo\" del programa, es decir, que un script haga algo m\u00e1s que simplemente ir de arriba a abajo ejecutando comandos. La primera herramienta que vamos a aprender para controlar el flujo del programa son los condicionales que permiten crear secciones de c\u00f3digo que se van a ejecutar solo si se cumple (o no se cumple) una condici\u00f3n. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if [[ $numero -gt 10 ]] then echo \" $numero es mayor a 10\" fi # Igual que antes estoy agarrando un par\u00e1metro al correr el script numero = $1 echo \" $numero es un numero\" # *if* es la estructura m\u00e1s usada para condicionales # Adentro de los corchetes va la condici\u00f3n. \"-gt\" es el comparador. El que estamos usando aca es el # \">\" o \"greater\" if [[ $numero -gt 10 ]] then # El codigo entre *then* y *fi* solo si ejecuta si la condici\u00f3n es verdad, de otra forma se saltea # Este codigo esta m\u00e1s a la derecha, o *indentado*. Esto se hace con tab y en la mayor\u00eda de los lenguajes # es solo para entender m\u00e1s f\u00e1cil el c\u00f3digo (en python y algunos otros lenguajes es necesario indentar # para que el programa ande bien) echo \" $numero es mayor a 10\" fi # *fi* indica donde termina el condicional Copien este c\u00f3digo a un script y prueben pasarle n\u00fameros menores y mayores a 10 a ver que pasa. Info Es importante remarcar que la condici\u00f3n del if (lo que en este caso se encuentra entre los corchetes) es b\u00e1sicamente una pregunta que puede tener solo una de dos respuestas posibles: S\u00ed (llamada en programaci\u00f3n Verdadero o True ) \u00f3 No (llamada en programaci\u00f3n Falso o False ) Como dije antes a un condicional se le puede poner tambi\u00e9n que pase algo cuando no es verdad, por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if [[ $numero -gt 10 ]] then echo \" $numero es mayor a 10\" else echo \" $numero es menor o igual a 10\" fi numero = $1 echo \" $numero es un numero\" if [[ $numero -gt 10 ]] then # Ahora si la condici\u00f3n es verdad se va a ejecutar el c\u00f3digo entre *then* y *else* y luego va a seguir a partir de *fi* echo \" $numero es mayor a 10\" else # El c\u00f3digo entre *else* y *fi* se ejecuta solo cuando la condici\u00f3n no es verdad echo \" $numero es menor o igual a 10\" fi Hay bastante m\u00e1s para hablar de los ifs . Hay muchos m\u00e1s comparadores y son diferentes si estoy comparando n\u00fameros o strings . Hay formas de poner m\u00e1s de una condici\u00f3n por if y hay otras estructuras como son los case que cumplen una funci\u00f3n similar. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los condicionales en Bash, incluyendo una lista m\u00e1s detallada de los comparadores, se puede ver en esta p\u00e1gina . Ciclos Digamos que por alguna extra\u00f1a raz\u00f3n quieren imprimir los numeros del 1 al 10 en la consola, tendr\u00edan que hacer echo 1 , echo 2 , etc, hasta llegar a echo 10 . \u00bfQu\u00e9 pasa si ahora les pido del 1 al 100, o al 1000?. Por suerte existen los ciclos , que son estructuras que nos permiten repetir algo varias veces y al usar variables podemos hacer que cada vez sea ligeramente diferente a la anterior. C\u00f3digo C\u00f3digo con comentarios for (( i = 1 ; i< = 1000 ; i++ )) do echo $i done # *for* es una de las estructuras m\u00e1s usadas para hacer ciclos # *i* es el nombre de la variable que va a cambiar de valor en cada ciclo. Se le podria poner cualquier nombre a # \u00e9sta variable, por ejemplo *numero* en nuestro caso, pero es costumbre ponele *i* # i=1 indica que el primer valor de $i es 1 # i<=1000 indica que el ciclo se va a repetir mientras $i sea menor o igual a 1000 # i++ indica que al final de cada ciclo el valor de $i va a subir en 1 for (( i = 1 ; i< = 1000 ; i++ )) do # El c\u00f3digo entre *do* y *done* se va a ejecutar una vez para cada posible $i en el rango echo $i done Hay otra versi\u00f3n del for que comunmente se denomina for each . En este caso $i no representa n\u00fameros que aumentan, sino diferentes elementos en una lista. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios for color in rojo amarillo verde do echo \"Este es el color $color \" done # Como ahora la variable son elementos de una lista le pongo el nombre *color* para que se sepa que es, # pero podr\u00eda ser *i* # Esta es una forma bastante mala de usar listas de elementos, donde la estoy declarando en el mismo *for*; # comunmente las listas existen de antes en el programa o las obtengo de un archivo o comando de Lubuntu for color in rojo amarillo verde do echo \"Este es el color $color \" done Hay bastante m\u00e1s para hablar de los ciclos . Se pueden hacer ciclos que aumenten de 2 en 2 o hacer ciclos que disminuyan. Hay otros dos tipos de ciclos comunmente den\u00f3minados while y until (tambien llamado do ) y hay formas de forzar salir del ciclo o pasar a la pr\u00f3xima iteraci\u00f3n con break y continue (tambien llamado next ). Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los ciclos en Bash se puede ver en esta p\u00e1gina . Ejercicio 3. Programaci\u00f3n en Bash REHACER El objetivo de este Ejercicio va a ser hacer un script que reciba un n\u00famero por consola y escriba todos los n\u00fameros pares entre 1 y dicho n\u00famero. Para hacerla simple vamos a asumir que el numero que le pasamos por consola va a ser un n\u00famero entero entre 1 y 1000. Dos cosas que van a necesitar para hacer esto son: # El operador % calcula el resto entre 2 n\u00fameros # En este caso $resto va a contener el resto de dividir 5 por 2 (que es 1) # Los par\u00e9ntesis y signo $ bordeando a la operaci\u00f3n son necesarios para que funcione bien en Bash resto = $(( 5 % 2 )) # == es el comparador para igualdad usado en los *ifs* # Va a ser verdadero solo si lo de la izquierda es identico a lo de la derecha. if [[ 2 == 2 ]] Si quieren pueden intentar programar directamente, pero para hacer programas complejos, especialmente en un lenguaje que reci\u00e9n aprenden, es recomendado ir por partes e ir probando en el medio. Unos posibles pasos a seguir son: Info La idea de hacerlo as\u00ed es ir probando de a poco si aparece algun error. \u00a1Prueben el script entre cada paso principal! Creen un script en el que se declare una variable llamada $numero y la imprima en la terminal. Agreguen al script otra variable llamada $resto , que va a ser el resto de dividir a $numero por 2. Hagan que el script imprima tanto $numero como $resto (en 2 lineas diferentes). Agreguen un condicional que vea si $resto es 0 (y por lo tanto si $numero es par). De ser verdadero, hagan que imprima \"es par\". Agreguen un ciclo que vaya de 1 a $numero e imprima todos esos n\u00fameros. En este momento tenemos todos los elementos necesarios andando, pero hay que borrar algunas lineas, reescribir pedazos de otras lineas y mover algunos bloques adentro de otros. Traten de pensar que hay que modificar para conseguir nuestro objetivo. No es trivial esto, asi que si ven que se les complica lean las instrucciones siguientes: Spoilers Borren la linea que imprime $resto y la linea que imprime $numero (no nos interesa esta salida) Muevan la declaraci\u00f3n de $resto y el if adentro del for (ya que tengo que ver si cada uno de los n\u00fameros del for es par) Cambien la declaraci\u00f3n de $resto para que calcule el resto de dividir $i por 2 y no $numero Muevan la linea que imprime $i adentro del if (que ahora est\u00e1 a su vez adentro del for ) y borren la linea que imprime \"es par\" (porque yo quer\u00eda los n\u00fameros) Cambien la declaraci\u00f3n de $numero al principio de todo para que tome el primer par\u00e1metro pasado en la consola Y listo, deber\u00edan tener su programa andando. Bash: Tablas Lo ultimo que vamos a aprender hoy es un peque\u00f1o vistazo a como se pueden manipular tablas desde la consola de Lubuntu. Descarguen el archivo mtcars que se encuentra en los materiales del TP (boton al principio de todo) y ponganlo en Documentos . Esta tabla viene por defecto con el lenguaje de programaci\u00f3n R y nos va a servir para aprender como manipular tablas en Bash. Abran el archivo con Leafpad (doble click). Podemos ver que es una tabla en formato texto, donde la primera l\u00ednea es el encabezado o header de la tabla y en cada l\u00ed\u0144ea las columnas est\u00e1s separadas entre ellas con un Tab . Imaginense si tuvieran que copiar solo una columna de esta tabla, o quedarse con aquellas filas que tengan un n\u00famero espec\u00edfico de cilindros (columna cyl ), \u00bfcomo lo har\u00edan? Esto es lo que vamos a aprender a continuaci\u00f3n. Columnas de mtcars mtcars es una tabla que viene por defecto con el lenguaje de programaci\u00f3n R , sus columnas son: Nombre Descripci\u00f3n car_name Name of the car mpg Miles/(US) gallon cyl Number of cylinders disp Displacement (cu.in.) hp Gross horsepower drat Rear axle ratio wt Weight (1000 lbs) qsec 1/4 mile time vs Engine (0 = V-shaped, 1 = straight) am Transmission (0 = automatic, 1 = manual) gear Number of forward gears carb Number of carburetors AWK El comando awk (que recibe su nombre de las iniciales de los apellidos de las 3 personas que lo crearon) es uno de los comandos mas usados en Bash para manipular tablas por su gran flexibilidad, hasta el punto que es posible incorporar condicionales y ciclos dentro de \u00e9l. La forma m\u00e1s simple del comando es: awk -opciones 'instrucciones' TABLEFILE Donde TABLEFILE es el archivo que contiene a la tabla e instrucciones es que hacer con ese archivo una vez que se abra (las instrucciones siempre tienen que estar delimitadas por comillas simples, o ' ). Colocando a nuestra terminal en Documentos podemos correr: awk -F \"\\t\" '{print}' mtcars Donde -F es la opci\u00f3n que le dice a awk cual es el caracter que separa las diferentes columnas (en este caso es \\t , que es el s\u00edmbolo de Tab ) y {print} es la instrucci\u00f3n que simplemente dice que imprima en pantalla la tabla. Lo importante de awk es que nos permite trabajar con columnas individuales. Por ejemplo si ponemos: awk -F \"\\t\" '{print $1}' mtcars Vemos que awk imprime solo la primera columna, que en este caso es el nombre de los autos. Podemos asumir entonces que cada columna se puede referir con $1 , $2 , etc. Probemos imprimir muchas columnas corriendo: awk -F \"\\t\" '{print $1 $3 $5}' mtcars \u00bfQu\u00e9 ven que pasa aca? Debido a como funciona print , las diferentes columnas se imprimeron una pegada a la otra sin dejar espacios. Si quisieramos imprimir las columnas separadas con Tab como la tabla original tenemos que hacer: awk -F \"\\t\" '{print $1 \"\\t\" $3 \"\\t\" $5}' mtcars Ahora bien, una actividad normal cuando se tienen tablas con muchos datos es filtrar mis datos por alguna columna, o dicho de otra forma, usar condicionales. Un ejemplo de esto en awk seria: awk -F \"\\t\" '{if ($3 == 6) {print}}' mtcars \u00bfQu\u00e9 les parece que hace ese comando? Piensen que estan viendo una estructura de if que no vieron antes, pero aun as\u00ed probablemente puedan inferir que va a hacer el comando pensando en como funcionaba el if de Bash que aprendimos arriba. Esto es super normal en la programaci\u00f3n, donde la estructura exacta cambia, pero la l\u00f3gica detr\u00e1s se mantiene constante. Entonces, aca le estan diciendo a awk que imprima en la pantalla todas las filas que tengan un valor de 6 en la columna 3 (que si se fijan es cyl , o el n\u00famero de cilindros). Como siempre hay mucho m\u00e1s para decir sobre awk , pero por hoy estamos bien. Sepan sin embargo que awk tiene su propio grep y su propio for , que se pueden declarar variables dentro de \u00e9l y que tiene hasta una lista de comandos propios. Pueden ver mucha m\u00e1s informaci\u00f3n de awk en esta p\u00e1gina . Ejercicio Adicional 1. Programaci\u00f3n en Bash Info Algunas guias van a tener ejercicios adicionales, que son ejercicios que pueden hacer si quieren practicar m\u00e1s el tema, pero no son obligatorios. Suelen ser un poco m\u00e1s complicados que los ejercicios de la gu\u00eda. El objetivo de este Ejercicio va a ser hacer un script que reciba un n\u00famero por consola y escriba todos los n\u00fameros pares entre 1 y dicho n\u00famero. Para hacerla simple vamos a asumir que el numero que le pasamos por consola va a ser un n\u00famero entero entre 1 y 1000. Dos cosas que van a necesitar para hacer esto son: # El operador % calcula el resto entre 2 n\u00fameros # En este caso $resto va a contener el resto de dividir 5 por 2 (que es 1) # Los par\u00e9ntesis y signo $ bordeando a la operaci\u00f3n son necesarios para que funcione bien en Bash resto = $(( 5 % 2 )) # == es el comparador para igualdad usado en los *ifs* # Va a ser verdadero solo si lo de la izquierda es identico a lo de la derecha. if [[ 2 == 2 ]] Si quieren pueden intentar programar directamente, pero para hacer programas complejos, especialmente en un lenguaje que reci\u00e9n aprenden, es recomendado ir por partes e ir probando en el medio. Unos posibles pasos a seguir son: Info La idea de hacerlo as\u00ed es ir probando de a poco si aparece algun error. \u00a1Prueben el script entre cada paso principal! Creen un script en el que se declare una variable llamada $numero y la imprima en la terminal. Agreguen al script otra variable llamada $resto , que va a ser el resto de dividir a $numero por 2. Hagan que el script imprima tanto $numero como $resto (en 2 lineas diferentes). Agreguen un condicional que vea si $resto es 0 (y por lo tanto si $numero es par). De ser verdadero, hagan que imprima \"es par\". Agreguen un ciclo que vaya de 1 a $numero e imprima todos esos n\u00fameros. En este momento tenemos todos los elementos necesarios andando, pero hay que borrar algunas lineas, reescribir pedazos de otras lineas y mover algunos bloques adentro de otros. Traten de pensar que hay que modificar para conseguir nuestro objetivo. No es trivial esto, asi que si ven que se les complica lean las instrucciones siguientes: Spoilers Borren la linea que imprime $resto y la linea que imprime $numero (no nos interesa esta salida) Muevan la declaraci\u00f3n de $resto y el if adentro del for (ya que tengo que ver si cada uno de los n\u00fameros del for es par) Cambien la declaraci\u00f3n de $resto para que calcule el resto de dividir $i por 2 y no $numero Muevan la linea que imprime $i adentro del if (que ahora est\u00e1 a su vez adentro del for ) y borren la linea que imprime \"es par\" (porque yo quer\u00eda los n\u00fameros) Cambien la declaraci\u00f3n de $numero al principio de todo para que tome el primer par\u00e1metro pasado en la consola \u00a1Y listo!, deber\u00edan tener su programa andando. Bibliograf\u00eda Consola Comando man","title":"Index"},{"location":"practicos/1-Trabajo-Practico-Uno/#tp-1-introduccion-a-lubuntu-bash-y-programacion","text":"Materiales","title":"data-toc-label"},{"location":"practicos/1-Trabajo-Practico-Uno/#to-do-docente","text":"Rehacer Ej 3 Cambiar imagen TP Ver ortografia? (acentos basicamente)","title":"TO DO Docente"},{"location":"practicos/1-Trabajo-Practico-Uno/#recursos-online","text":"Command-line bootcamp Programando en Bash Comando AWK Consola de Linux online (y otra ) Compilador de Bash online (y otro )","title":"Recursos Online"},{"location":"practicos/1-Trabajo-Practico-Uno/#objetivos","text":"Familiarizarse un poco con Lubuntu y su estructura de directorios Familiarizarse con el uso b\u00e1sico de los comandos de Bash Familiarizarse con los bloques l\u00f3gicos b\u00e1sicos de la programaci\u00f3n","title":"Objetivos"},{"location":"practicos/1-Trabajo-Practico-Uno/#introduccion-al-tema","text":"En este trabajo pr\u00e1ctico vamos a aprender a usar la l\u00ednea de comando de Lubuntu (tambi\u00e9n referida como terminal , consola o shell ). Para muchos de nosotros, que estamos acostumbrados a la interfaz gr\u00e1fica de sistemas operativos como los de Windows o GUI (por las siglas en ingles: Graphic User Interface ), la linea de comando puede parecer un desaf\u00edo, pero con pr\u00e1ctica y algo de paciencia descubrir\u00e1n que puede resultar amena. Su uso tiene dos ventajas destacables para nuestro campo: Nos permitir\u00e1 trabajar en entornos o programas sin interfaz gr\u00e1fica (GUI) Mediante el uso de programas o scripts , nos permitir\u00e1 automatizar procesos, acelerando el trabajo y minimizando la cantidad de errores que podemos cometer con tareas repetitivas","title":"Introduccion al Tema"},{"location":"practicos/1-Trabajo-Practico-Uno/#unix-linux-ubuntu-lubuntu","text":"Dependiendo que tan familiares esten con Linux, todos estos nombres pueden resultar un poco confusos. Vamos por partes: Unix es un sistema operativo creado en 1969 por dos programadores estadounidenses que trabajaban para Bell Labs, una compan\u00eda de investigaci\u00f3n y desarrollo cient\u00edfico que en su momento era propiedad de AT&T (compa\u00f1ia estadounidense de tel\u00e9fonos). Al ser un sistema operativo portable, multitarea y multiusuario se hizo r\u00e1pidamente popular y se difundi\u00f3 por instituciones acad\u00e9micas y empresas Debido a su popularidad, otros programadores quisieron hacer sus propias versiones de sistemas operativos basados en Unix, pero como sus sistemas operativos ten\u00edan c\u00f3digo original de Unix, AT&T los demand\u00f3, paralizando esta tendenc\u00eda En 1983 se crea el proyecto GNU con el objetivo de crear un sistema operativo similar a Unix, pero gratis y de c\u00f3digo abierto. GNU significa \"GNU's Not Unix\" (es un anagrama recursivo, los programadores se divierten barato). Hacia el fin de los 80s el proyecto ya ten\u00eda casi todos los programas que necesitaba, pero les faltaba conseguir un buen kernel (principal responsable de facilitar a los distintos programas acceso seguro al hardware de la computadora) En 1991, Linus Torvalds empieza a crear lo que terminar\u00eda siendo Linux , un sistema operativo con su propio kernel que usaba muchas de los programas del proyecto GNU. Esta versi\u00f3n se volvi\u00f3 r\u00e1pidamente la m\u00e1s popular de todas las versiones de GNU, llevando a que en 1993 se creara el Debian Project , un proyecto comunal con el objetivo de mejorar una distrubuci\u00f3n de Linux que denominaron Debian GNU/Linux (tambi\u00e9n llamada simplemente Debian ). Ubuntu es una distribuci\u00f3n de Linux creada en 2004 basada en Debian. Al d\u00eda de la fecha es la distrubuci\u00f3n m\u00e1s popular de Linux con m\u00e1s del 50% de los usuarios. Lubuntu es una distribuci\u00f3n de Linux creada en 2009 basada Ubuntu. Es bastante similar a Ubuntu en todo lo que es consola, pero tiene una interfaz gr\u00e1fica que consume menos recursos, haciendolo ideal para maquinas m\u00e1s viejas (o en nuestro caso, maquinas virtuales que pesen lo menos posible).","title":"\u00bfUnix? \u00bfLinux? \u00bfLubuntu?"},{"location":"practicos/1-Trabajo-Practico-Uno/#estructura-de-directorios-de-lubuntu","text":"La organizaci\u00f3n de archivos en Ubuntu y Lubuntu es bastante diferente a la de Windows. Si bien no vamos a detallar completamente toda la estructura y que es cada carpeta (porque el 95% no lo van a usar en esta materia), es importante tener una idea de lo b\u00e1sico: / Carpeta raiz, o root . Contiene al resto de las carpetas /etc Configuraciones del sistema para todos los usuarios (mucho cuidado al tocar) /home Ubicaci\u00f3n de los directorios de los diferentes usuarios (o en este caso el \u00fanico usuario) /home/ibioinfo Directorio del usuario ibioinfo . Es el lugar donde van a trabajar la mayor\u00eda del tiempo (incluye tanto el Escritorio como Documentos) y donde se abre por defecto la terminal (m\u00e1s sobre esto en un ratito). Comunmente referida como home directory o home del usuario ibioinfo /media Si fuera una computadora normal (no VM) aca aparecer\u00edan los pendrives. En nuestro caso aca aparecen por defecto las carpetas compartidas con la PC host /tmp Ubicaci\u00f3n de los archivos temporales de los programas /var Ubicaci\u00f3n de los archivos variables de los programas, como logs, bases de datos, paginas webs, etc /var/log Probablemente la subcarpeta m\u00e1s usada de /var . Contiene los logs de los programas (que a veces es la \u00fanica forma de saber porque algo no anduvo) Esto es simplemente un vistazo r\u00e1pido. Si quieren la lista completa de subdirectorios de Lubuntu la pueden encontrar en esta p\u00e1gina , pero tengan en cuenta que tocar cualquier cosa fuera de /home conlleva la posibilidad de arruinar la computadora. En esta materia vamos a usar principalmente /home y /media .","title":"Estructura de directorios"},{"location":"practicos/1-Trabajo-Practico-Uno/#linea-de-comando","text":"Como ya dijimos en la introducci\u00f3n la l\u00ednea de comando tiene varios nombres, y en esta guia nos vamos a referir a ella como terminal o consola . Hay varias formas de abrir la terminal: Desde cualquier lado: Ctrl + Alt + T Desde cualquier lado: Inicio (menu de abajo a la izquierda) Herramientas del sistema LXterminal Desde afuera de una carpeta: Boton derecho en la carpeta Abrir en el terminal Desde adentro de una carpeta: Herramientas Abrir la carpeta actual en un terminal (o apretar F4 ) La terminal funciona como un explorador de archivos que se mueve entre las carpetas. Los primeros dos m\u00e9todos van a abrir la terminal en /home/ibioinfo , mientras que los \u00faltimos dos m\u00e9todos van a abrir la terminal en la carpeta elegida. Si en algun momento les decimos que abran la terminal y no aclaramos otra cosa nos referimos a abrirla en /home/ibioinfo . Abran la terminal en /home/ibioinfo y deberian ver algo as\u00ed: ibioinfo@ibioinfo-VirtualBox:~$ Donde ibioinfo es el nombre del usuario actual e ibioinfo-VirtualBox el nombre de la computadora (que justo en este caso son similares, pero no es necesario). El ~ despu\u00e9s de los dos puntos parece ser parte de la terminal, pero en realidad est\u00e1 indicando la carpeta en la que se encuentra en este momento. Como cada usuario trabaja mas que nada en su carpeta, Lubuntu le asigna el s\u00edmbolo ~ a esa carpeta para simplificar los directorios que aparecen en la terminal. En nuestro caso ~ equivale a /home/ibioinfo y puede ser que nos refiramos a esa carpeta como su home directory o simplemente su home . Info Aclaraciones por si son fan\u00e1ticos de los atajos de teclado: Para copiar texto en la terminal hay que usar Ctrl + Shift + C . En en resto de Lubuntu es normal ( Ctrl + C ). Para pegar texto en la terminal hay que usar Ctrl + Shift + V . En en resto de Lubuntu es normal ( Ctrl + V ). De apretar Ctrl + C en la terminal le estan diciendo que corte forzosamente el programa que est\u00e1 corriendo. Si bien hay que tener cuidado con no cortar un proceso importante a la mitad, este atajo del teclado es util si un programa se te qued\u00f3 colgado o similar.","title":"L\u00ednea de comando"},{"location":"practicos/1-Trabajo-Practico-Uno/#bash-ubicarse-en-la-terminal","text":"La terminal acepta una variedad de comandos en lenguaje Bash , que es el lenguaje de la terminal de GNU. El formato general de los comandos es: comando -opciones parametro1 parametro2 etc Donde comando es el nombre del programa a correr, opciones son comunmente una o m\u00e1s letras luego de un gui\u00f3n que indican alguna modificaci\u00f3n a las opciones por defecto del programa, y los diferentes parametros son cosas que necesita el programa para correr, como puede ser un archivo que esta leyendo. Todo esto va a ir quedando m\u00e1s claro con los diferentes ejemplos.","title":"Bash: Ubicarse en la terminal"},{"location":"practicos/1-Trabajo-Practico-Uno/#usted-esta-aqui","text":"Al ser la terminal b\u00e1sicamente un explorador de archivos, es necesario saber en que carpeta estoy y que hay adentro de dicha carpeta. pwd es un comando que imprime el directorio actual en la terminal ( P rint W orking D irectory). Pruebenlo a ver si ~ era realmente /home/ibioinfo : pwd Bien, ahora que ganamos su confianza, vean que hay adentro de esa carpeta usando ls : ls Si bien por ahora todo lo que ven son carpetas azules, tengan en cuenta que ls va a colorear diferentes tipos de archivos (y de carpetas) de diferentes colores. Este comando es una buena oportunidad de entender un poco mas sobre opciones y parametros . Por defecto ls lista los archivos de la carpeta actual, pero de darle un par\u00e1metro muestra los de dicha carpeta. Prueben correr lo siguiente: ls /etc/perl/Net En este caso est\u00e1n viendo los contenidos de una carpeta diferente a donde estamos parados en la terminal. Si yo quisiera mas informaci\u00f3n sobre los archivos que se encuentran dentro de esta carpeta puedo hacer: Tip El pr\u00f3ximo comando es muy parecido al anterior. Pueden usar Up y Down en su terminal para navegar por los ultimos comandos utilizados y modificar lo necesario. ls -l /etc/perl/Net Donde la opcion -l agrega informaci\u00f3n sobre los permisos del archivo (quien puede leerlo o modificarlo). Con un poco de suerte esta es la primera y ultima vez en toda la materia que vamos a hablar de los permisos de Lubuntu (y de como a veces dan dolores de cabeza). Info La lista completa de las opciones para cada comando se puede ver con el comando man (de manual ). En este caso ser\u00eda man ls .","title":"Usted est\u00e1 aqu\u00ed"},{"location":"practicos/1-Trabajo-Practico-Uno/#moverse-entre-las-carpetas","text":"Ahora que ya saben donde estan y que carpetas hay adentro es importante saber como moverse entre ellas. Esto se hace principalmente con el comando cd . Asegurense que la terminal esta en su home y usen ls para ver nuevamente la lista de carpetas dentro. Primero vamos a la carpeta Escritorio y vemos que archivos hay adentro, para eso hacer: Tip Tab funciona como autocompletar en la consola. Al escribir el pr\u00f3ximo comando prueben escribir solo cd Es y apretar Tab cd Escritorio Ahora veran que la parte de la izquierda de la terminal cambio a: ibioinfo@ibioinfo-VirtualBox:~/Escritorio$ Indicando que estan en /home/ibioinfo/Escritorio . Usen el comando adecuado para ver que archivos hay adentro de esta carpeta. Ahora quiero volver a su home y para eso escribo: cd .. Vean ahora en que carpeta est\u00e1n. En todo lo que es Ubuntu y Lubuntu .. significa \"una carpeta para arriba\". \u00bfQu\u00e9 pasa entonces si estan en /home/ibioinfo/Escritorio/TP1/Version3/Intento2/Edicion1 y quieren volver a su home ? \u00bfTienen que escribir cd .. 5 veces? Tecnicamente funciona, pero por defecto el comando cd te lleva a tu home si no le das ningun par\u00e1metro. cd","title":"Moverse entre las carpetas"},{"location":"practicos/1-Trabajo-Practico-Uno/#paths-relativos-y-absolutos","text":"Cuando corrimos cd ls /etc/perl/Net estaban ubicados en su home ( /home/ibioinfo ) y si vemos las carpetas dentro de home resulta que no existe ninguna llamada /etc . \u00bfD\u00f3nde est\u00e1 la carpeta /etc en relaci\u00f3n a /home/ibioinfo ? (ver Estructura de directorio de Lubuntu arriba si no se acuerdan) \u00bfC\u00f3mo pudimos acceder a /etc/perl/Net si la terminal estaba ubicada en una carpeta sin ninguna relaci\u00f3n? La respuesta a todo esto son los paths relativos y absolutos:","title":"Paths relativos y absolutos"},{"location":"practicos/1-Trabajo-Practico-Uno/#paths-absolutos","text":"El path /etc/perl/Net es lo que se llama un path absoluto ; no importa donde est\u00e9 en la terminal en ese momento, /etc/perl/Net va a siempre apuntar al mismo lugar y el comando ls /etc/perl/Net va a siempre andar bien. Una forma f\u00e1cil de identificar paths absolutos es que siempre empiezan en el root o / . Recuerden que ~ apunta a /home/ibioinfo , y por lo tanto el comando cd ~/Escritorio est\u00e1 usando un path absoluto, ya que sin importar de donde se use va a funcionar y va a ir a /home/ibioinfo/Escritorio .","title":"Paths absolutos"},{"location":"practicos/1-Trabajo-Practico-Uno/#paths-relativos","text":"Ahora bien, cuando nosotros estabamos ubicados en home y corrimos cd Escritorio pudimos entrar a /home/ibioinfo/Escritorio , pero si volvieramos a correr cd Escritorio el comando no funcionar\u00eda, ya que no existe la carpeta /home/ibioinfo/Escritorio/Escritorio . Esto se debe a que en este caso Escritorio es un path relativo a la ubicaci\u00f3n actual de la terminal. Otra forma de escribir paths relativos en Ubuntu es empezar con . , simbolo que indica \"la carpeta actual\". Volviendo al ejemplo anterior, es equivalente escribir cd Escritorio o cd ./Escritorio . Otro caso de path relativo que ya vimos es cd .. , donde apunta a la \"carpeta de arriba\" de la posici\u00f3n actual de la terminal. Ambos tipos de paths tienen sus ventajas y desventajas. Los paths absolutos tienen la ventaja de funcionar siempre, pero al usar toda la estructura toman m\u00e1s tiempo de escribir y son mas suceptibles a cambios de directorios (si muevo un archivo de lugar tengo que reescribir el comando). Por otro lado los paths relativos son mucho m\u00e1s r\u00e1pidos de escribir y en muchos casos funcionan en diferentes ubicaciones (o computadoras), pero al depender de la ubicaci\u00f3n de la terminal esto puede causar problemas si pienso que estoy en una carpeta pero estoy realmente en otra. En esta cursada vamos a usar ambos para diferentes casos.","title":"Paths relativos"},{"location":"practicos/1-Trabajo-Practico-Uno/#ejercicio-1-ubicarse-en-la-terminal","text":"Identifique cual o cuales de los siguientes comandos te llevar\u00edan desde cualquier carpeta al home del usuario ibioinfo . cd ~ cd home/ibioinfo cd home / ibioinfo cd / home / ibioinfo cd /home/ibioinfo cd /ibioinfo/home cd ././ibioinfo cd ./home/ibioinfo \u00bfCambiarian la respuesta en algunos de los puntos anteriores si el usuario logueado actualmente en la computadora no es ibioinfo ? \u00bfPor qu\u00e9? Identifique en la siguiente lista cuales paths son paths relativos : /var/foo/tom_jerry var/foo/tom_jerry /home/tom/Documentos/catfood.png ../../jerry/Documentos/cheese.png ./Videos/Capitulos/ ~/Videos/Capitulos/ ./Descargas/tom_jerry_cap1.torrent /home/tom/Descargas/tom_jerry_cap1.torrent","title":"Ejercicio 1"},{"location":"practicos/1-Trabajo-Practico-Uno/#bash-crear-y-eliminar","text":"Todo lo que es crear, copiar, mover y eliminar archivos y directorios se puede hacer usando la interfaz gr\u00e1fica como lo har\u00edan en cualquier otro sistema operativo, sin embargo hay situaciones (por ejemplo dentro de un script ) donde es necesario hacerlo mediante la consola. Si bien en esta guia le vamos a pedir que usen los siguientes comandos para pr\u00e1cticarlos, en el d\u00eda a d\u00eda hagan lo que les sea m\u00e1s c\u00f3modo.","title":"Bash: Crear y eliminar"},{"location":"practicos/1-Trabajo-Practico-Uno/#crear-y-eliminar-directorios","text":"Los directorios se pueden crear con: mkdir FOLDER Info En el resto de la guia van a aparecer ciertas palabras en may\u00fascula en los c\u00f3digos, como por ejemplo FOLDER . Estas palabras son variables o placeholders que tienen que ser reemplazadas por lo que corresponda. Donde FOLDER es un path absoluto o relativo con el nombre de la carpeta. Prueben ir en su terminal a /home/ibioinfo/Documentos y usar el comando: mkdir testfolder Y vean si efectivamente apareci\u00f3 una carpeta nueva. Luego usen el comando de nuevo a ver que pasa. Para eliminar directorios se puede usar: rmdir FOLDER Por defecto este comando solo puede eliminar directorios vacios (lo cual puede no ser muy util, pero a la vez es seguro). Usen el comando anterior y borren la carpeta que acaban de crear (reemplacen FOLDER por lo que corresponda). Prueben correr el comando una vez m\u00e1s a ver que pasa. Tip muy importante Este es un buen momento para hablar de que nombres ponerles a las cosas que uno crea un Lubuntu. Si bien cualquier nombre funciona en un principio, por un tema de compatibilidad entre los diferentes programas que pueden llegar a usar se recomienda: Muy recomendado: No usar comillas dobles, simples o ap\u00f3strofes Recomendado: No usar espacios, par\u00e9ntesis, \u00d1, acentos, di\u00e9resis u otros diacr\u00edticos (el espacio comunmente se remplaza por un gui\u00f3n o gui\u00f3n bajo)","title":"Crear y eliminar directorios"},{"location":"practicos/1-Trabajo-Practico-Uno/#crear-y-eliminar-archivos","text":"Hay varias formas de crear archivos en Lubuntu y la mas simple es touch FILE , que crea un archivo de texto vacio donde FILE es el nombre del archivo (que puede incluir un path antes). Para entender lo que quiero decir vayan a su home y corran: touch Documentos/testfile Aca estoy usando un path relativo para crear el archivo. Se van a dar cuenta que el archivo no tiene extensi\u00f3n (por ejemplo .txt ). En Lubuntu van a ver muchos archivos de texto sin extensi\u00f3n, pero se la pueden agregar sin problema si quieren. Entren a Documentos y vean si el archivo realmente existe. Lo que le vamos a ense\u00f1ar a continuaci\u00f3n es probablemente uno de los comandos m\u00e1s peligrosos de Bash si se usa incorrectamente. rm es el comando usado para eliminar archivos (o carpetas, o discos enteros) y es la base de cientos de historias en internet de como alguien se qued\u00f3 sin trabajo. El comando se usa: rm FILE Donde FILE es el archivo a eliminar. rm no les va a pedir confirmaci\u00f3n y el archivo va a ser borrado permanentemente (si borran archivos desde la interfaz gr\u00e1fica s\u00ed hay confirmaci\u00f3n y s\u00ed van a la papelera). Entonces, con cuidado, asegurense que estan en Documentos y borren el archivo testfile . Danger \u00bfSe entendi\u00f3 que hay que tener cuidado con rm ? \u00bfSi? Buenisimo.","title":"Crear y eliminar archivos"},{"location":"practicos/1-Trabajo-Practico-Uno/#mover-y-copiar-archivos-y-carpetas","text":"Adentro de Documentos creen una carpeta llamada testfolder2 y dos archivos de texto vacio, uno llamado testfile_mv y otro testfile_cp . Nuestro objetivo va a ser mover testfile_mv a la carpeta testfolder2 y copiar testfile_cp a la misma carpeta. Los archivos se mueven con mv y se copian con cp y ambos tienen un formato similar que es mv ARCHIVO_ORIGEN FOLDER_DESTINO Donde en este caso ARCHIVO_ORIGEN es el archivo a mover y FOLDER_DESTINO el path a donde moverlo. Prueben entonces mover testfile_mv y copiar testfile_cp adentro de la carpeta testfolder2 . Tip Usando la opci\u00f3n -i al comando, les va a pedir confirmaci\u00f3n si el archivo de destino ya existe. Recuerden que pueden usar man mv o man cp para ver mas opciones. Estos dos comandos tambi\u00e9n pueden ser usados como: mv ARCHIVO_ORIGEN ARCHIVO_DESTINO En este caso ARCHIVO_DESTINO no es una carpeta, sino un archivo adentro del FOLDER_DESTINO , lo que permite renombrar el ARCHIVO_ORIGEN al copiarlo / moverlo. Para que se entienda mejor este uso, ubiquens\u00e9 en Documentos y corran: cp testfile_cp testfolder2/testfile_cp_nuevo Con lo cual acabo de copiar testfile_cp de nuevo a la carpeta testfolder2 , pero ahora con otro nombre. Interesantemente, usar mv de esta manera es la forma de Ubuntu de renombrar archivos desde la terminal. Prueben entrar a testfolder2 y corran: mv testfile_cp_nuevo testfile_cp_otroNombre Y vean que pas\u00f3. Una vez que todo haya funcionado bien, usen rm para eliminar todos los testfile uno a uno y luego usen rmdir para eliminar testfolder2 . Ambos comandos funcionan tambi\u00e9n para copiar, mover y renombrar carpetas, en cuyo caso el formato es: mv FOLDER_ORIGEN FOLDER_DESTINO Danger Hay que ser cuidadosos al usar mv y cp ya que si el archivo de destino ya existe lo van a sobreescribir sin preguntar antes. A ambos comandos se le puede agregar la opci\u00f3n -i para que pregunte antes de sobreescribir de ya existir el archivo de destino.","title":"Mover y copiar"},{"location":"practicos/1-Trabajo-Practico-Uno/#bash-archivos-de-texto","text":"","title":"Bash: Archivos de texto"},{"location":"practicos/1-Trabajo-Practico-Uno/#escribir-archivos-de-texto","text":"En Lubuntu hay varias formas de escribir en archivos de texto, pero una de las m\u00e1s \u00fatiles para nosotros va a ser el > quien redirige la salida de informaci\u00f3n de la consola. Se usa: comando -opciones parametro1 parametro2 > ARCHIVO_DESTINO Donde lo de la izquierda de > es el comando como lo correr\u00edas normalmente y ARCHIVO_DESTINO es un archivo donde va a ser guardada la salida de ese comando (lo que normalmente ver\u00edan en la consola). Para entender un poco m\u00e1s, vayan a su home y corran: ls -l > Documentos/output_de_ls Ver\u00e1n que en un principio parece que no paso nada. Entren ahora a Documentos y van a ver que hay un nuevo archivo con el nombre output_de_ls . Vamos a abir el archivo usando Leafpad , el editor de texto de la interfaz \u01f5r\u00e1fica de Lubuntu. Asegurandose que estan Documentos , en la consola escriban: leafpad output_de_ls Van a ver que se abre el editor de texto de igual forma que si ubieran hecho doble click en el \u00edcono en el explorador de archivos de la GUI. Puede ser que aparezca un warning o advertencia en la consola, pero la podemos ignorar. Leafpad funciona como un editor de texto bastante normal. Agreguen una nueva linea abajo de todo (con cualquier texto) y guarden el archivo. Al momento sabemos como guardar en un archivo de texto cualquier salida de un comando de Lubuntu, pero, \u00bfc\u00f3mo hacemos para poner lo que nosotros queremos en un archivo de texto? Simple, \u00a1con otro comando de Lubuntu! El comando echo hace lo que su nombre indica y devuelve por la terminal el texto que le pases. Prueben escribir echo TEXTO , donde TEXTO es cualquier oraci\u00f3n, por ejemplo: echo Probando, uno, dos, tres Tal vez ya se dieron cuenta, pero combinando echo con > podemos escribir nuestros propios archivos de texto desde la terminal. Asegurandose que estan adentro de Documentos , corran: echo Esta es la primera linea del documento > mi_documento Confirmen que se escribi\u00f3 el archivo y que tiene el texto adentro. \u00bfQu\u00e9 piensan que pasa si ahora corr\u00f3 el siguiente comando? Pruebenl\u00f3: echo Quiero agregar otra linea al documento > mi_documento Usen Leafpad para leer el documento. Van a ver que la primera linea que agregamos desapareci\u00f3. Esto es porque cada uso de > sobreescribe el archivo. Si queremos agregar otra linea a un documento que ya tiene informaci\u00f3n tenemos que usar el comando >> quien agrega el texto al archivo en una nueva linea al final sin modificar el contenido anterior. As\u00ed que ahora que sabemos esto podemos correr estos dos comandos: echo Esta es la primera linea del documento > mi_documento echo Esta es la segunda linea del documento >> mi_documento Y vean con Leafpad si funcion\u00f3 como quer\u00edamos. Danger Hay que ser cuidadosos al usar > ya que si el archivo de destino ya existe lo va a sobreescribir sin preguntar antes.","title":"Escribir archivos de texto"},{"location":"practicos/1-Trabajo-Practico-Uno/#leer-archivos-de-texto","text":"Qu\u00e9 comando usar al leer archivos de texto en la consola depende mucho de que tan largo es el archivo y que me interesa de \u00e9l: \u00bfTiene solo pocas lineas de texto? cat va a abrir el archivo y escribirlo todo en la terminal. \u00bfTiene muchas lineas de texto y quiero ver las primeras p\u00e1ginas a ver de que se trata? less va a abrir el archivo y mostrar solo el texto que entra en la terminal. Aprentando Space pasa a la pr\u00f3xima p\u00e1gina y apretando Q deja de leerlo. \u00bfTiene muchas lineas de texto y quiero ver solo las primeras lineas? head te muestra las primeras 10 lineas del archivo. Se puede especificar la cantidad de lineas agregando una opci\u00f3n, por ejemplo, head -3 muestra solo las primeras 3 l\u00edneas. \u00bfTiene muchas lineas de texto y quiero ver solo las \u00faltimas lineas? tail te muestra las \u00faltimas 10 l\u00edneas del archivo. Este n\u00famero se puede cambiar de la misma forma que para head . \u00bfNo saben que tan largo es un archivo dado? Pueden averiguarlo con el comando wc , que devuelve el numero de lineas, palabras y letras (en ese orden) en el archivo. De pasarle la opci\u00f3n -l , el comando devuelve solo el n\u00famero de lineas. Todos estos funcionan de la forma: comando FILE Usando el archivo martin_fierro que se encuentra en los materiales del TP (boton al principio de todo), prueben los 5 comandos anteriores.","title":"Leer archivos de texto"},{"location":"practicos/1-Trabajo-Practico-Uno/#buscar-palabras-en-archivos-de-texto","text":"Va a ser com\u00fan cuando trabajemos con tablas que nos interese encontrar filas con cierto valor y una forma r\u00e1pida de hacer eso es usar grep , comando al que le pasas una palabra o patr\u00f3n y busca filas dentro de un archivo que contengan dicha palabra o patr\u00f3n. En formato general el comando es: grep PALABRA FILE Usando el archivo martin_fierro con en que trabajamos en la secci\u00f3n anterior podemos correr: grep cantar martin_fierro Y vamos a ver todas las lineas del documento donde aparece la palabra \"cantar\". Hay mucho para hablar sobre grep , pero por ahora lo que nos va a importar es: La opci\u00f3n -v devuelve las l\u00edneas que no contienen PALABRA La opci\u00f3n -c devuelve el n\u00famero de l\u00edneas que contienen PALABRA Puedo buscar multiples palabras separand\u00f3las con | , por ejemplo, grep PALABRA1|PALABRA2 FILE Info Mencion\u00e9 antes que grep tambi\u00e9n funciona con patrones. Estos patrones son conocidos como Expresiones Regulares, o RegEx , y de hecho usar | para buscar multiples palabras es parte de ellos. Como este es un tema complejo y ya tenemos bastante que procesar no vamos a profundizar mas sobre ellos en este momento, pero explicaremos cualquier patr\u00f3n que usemos en la materia cuando aparezca.","title":"Buscar palabras"},{"location":"practicos/1-Trabajo-Practico-Uno/#combinar-comandos","text":"En Bash es posible combinar comandos, lo que quiere decir pasarle la salida de un comando directamente como entrada a otro comando. Esto se hace dividiendo los diferentes comandos con | (o pipe ). Para entender un poco mejor veamos un ejemplo. Digamos que quiero ver las cuales de las primeras 10 lineas del archivo martin_fierro contienen la palabra \"cantar\". Para esto tengo que hacer: head -10 martin_fierro | grep cantar Fijense que en este caso parecer\u00eda que a grep no le estoy pasando ningun FILE , pero lo que pasa es que va usar como entrada la salida de head . De esta forma se puede concatenar cualquier cantidad de comandos que seran ejecutados de izquierda a derecha.","title":"Combinar comandos"},{"location":"practicos/1-Trabajo-Practico-Uno/#ejercicio-2-archivos-de-texto","text":"Para este ejercicio vamos a seguir usando el archivo martin_fierro . \u00bfCu\u00e1ntas l\u00edneas tiene el archivo? \u00bfCu\u00e1ntas l\u00edneas contienen la palabra \"cantar\"? \u00bfCu\u00e1ntas l\u00edneas no contienen la palabra \"guitarra\"? Cree otro archivo de texto llamado martin_fierro_sinA con las l\u00edneas del archivo martin_fierro que no tengan la letra \"a\". Sin borrar el contenido y usando la consola, agregue una l\u00ednea al final de martin_fierro_sinA que indique el autor del Martin Fierro (Jos\u00e9 Hern\u00e1ndez). Volviendo al archivo original, \u00bfcu\u00e1ntas l\u00edneas no contienen la letra \"o\" y s\u00ed contienen la letra \"i\"? (Tip: use | para encadenar comandos)","title":"Ejercicio 2"},{"location":"practicos/1-Trabajo-Practico-Uno/#bash-programacion-y-scripts","text":"Info A continuaci\u00f3n vamos a ver una peque\u00f1a introducci\u00f3n a la programaci\u00f3n usando Bash como lenguaje. El objetivo de lo que sigue no es aprenderse de memoria las estructuras y si hay que poner una llave aca o dejar un espacio all\u00e1, sino entender la l\u00f3gica detr\u00e1s de la programaci\u00f3n y como se pueden usar variables, condicionales y ciclos para obtener el resultado deseado.","title":"Bash: Programaci\u00f3n y Scripts"},{"location":"practicos/1-Trabajo-Practico-Uno/#scripts","text":"Los scripts de Bash son b\u00e1sicamente una lista de muchos de los comandos que nosotros corrimos en la terminal, pero escritos dentro de un archivo. Al ejecutar ese archivo todos los comandos dentro de \u00e9l ser\u00e1n corridos uno a uno de arriba a abajo. Para simplificar un poco la tarea y enfocarnos en lo que importa en esta secci\u00f3n vamos a utilizar la interfaz gr\u00e1fica de Lubuntu. Vayan a Documentos y creen un archivo llamado primer_programa.sh (Boton derecho Crear nuevo... Archivo vac\u00edo). Luego abran el archivo en Leafpad (doble click) y escriban lo siguiente: echo \"----------------\" echo \"| Hello world! |\" echo \"----------------\" Ahora salven en archivo, abran la terminal en esa carpeta ( F4 ) y vamos a ejecutar el script con: bash primer_programa.sh \u00a1Felicidades, ya pueden decir que son programadores! Como pudieron observar, los scripts de Bash se corren con el comando bash SCRIPT y al hacerlo se ejecutaron los 3 comandos echo en el orden que estaban dentro del script. Este tipo de scripts son \u00fatiles si quiero dejar evidencia de los comandos que corr\u00ed en Bash, ya sea para volver a hacerlo otro d\u00eda o para pasarselos a algui\u00e9n m\u00e1s y que los corra en su propia computadora; sin embargo, para realmente programar necesitamos m\u00e1s herramientas.","title":"Scripts"},{"location":"practicos/1-Trabajo-Practico-Uno/#variables","text":"Las variables son palabras que guardan dentro de ellas un n\u00famero o un string (texto), entre otro tipo de valores posibles que veremos m\u00e1s adelante. Veamos un ejemplo de como usar variables (vean ambas pesta\u00f1as): C\u00f3digo C\u00f3digo con comentarios nombre = \"Unsamer\" echo \"Hola $nombre , \u00bftodo bien?\" # Las lineas que empiezan con # son comentarios, no afectan el c\u00f3digo y sirven para aclarar que estas # haciendo en tu programa o script # Al declarar una variable en Bash no se puede poner espacio entre la variable, el = y el valor # Las comillas se usan para indicar que lo de adentro es una cadena de caracteres, o *string* nombre = \"Unsamer\" # Cuando se usa la variable, se le agrega el prefijo $ echo \"Hola $nombre , \u00bftodo bien?\" \u00bfQu\u00e9 piensan que va a pasar de correr este c\u00f3digo en un script? Pruebenl\u00f3. Info Desgraciadamente Bash es muy estricto al momento de programar y perdona bastante poco (como por ejemplo el tema de tener un espacio m\u00e1s o menos). M\u00e1s adelante vamos a usar el lenguaje R que va a ser una de nuestras principales herramientas al momento de analizar y plotear datos y es mucho m\u00e1s amigable. En este momento pueden estar pensando que hubiera sido mucho m\u00e1s f\u00e1cil poner solo echo \"Hola Unsamer, \u00bftodo bien?\" y ahorrarme el tema de la variable. Tienen raz\u00f3n. Por ahora. \u00bfSe acuerdan de los parametros de los comandos de Bash? Al pasarle par\u00e1metros a un script de Bash estos se asignan automaticamente a variables llamadas $1 , $2 , etc. Editemos ahora nuestro c\u00f3digo anterior: C\u00f3digo C\u00f3digo con comentarios nombre = $1 echo \"Hola $nombre , \u00bftodo bien?\" # $1 es el primer parametro que se le pasa al script de Bash # Le estoy asignando el valor de una variable a otra variable. $1 sigue existiendo, pero no la uso m\u00e1s nombre = $1 # Podr\u00eda usar $1 directamente aca, pero as\u00ed se entiende mucho m\u00e1s lo que hace el c\u00f3digo al leerlo # (y para programas muy complicados esto es muy importante) echo \"Hola $nombre , \u00bftodo bien?\" Y ahora corran: bash SCRIPT \"NOMBRE\" Por si la versi\u00f3n gen\u00e9rica no queda claro, si el script se llamara saludo.sh y quiero conseguir el mismo resultado que antes habr\u00eda que correr: bash saludo.sh \"Unsamer\" Info Tecnicamente si estoy pasando solo una palabra las comillas no son necesarias, pero si el string que estoy pasando tiene un espacio tengo que ponerlas si o si. Hay bastante m\u00e1s para hablar de las variables . Existen muchos tipos m\u00e1s de variables, como booleanos (variable que es verdadera o falsa), arreglos (o vectores) y listas. Otros lenguajes de programaci\u00f3n hasta tienen variables m\u00e1s complejas que pueden almacenar tablas enteras. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre las variables en Bash se puede ver en esta p\u00e1gina .","title":"Variables"},{"location":"practicos/1-Trabajo-Practico-Uno/#condicionales","text":"Las variables son importantes, pero gran parte de la programaci\u00f3n es controlar el \"flujo\" del programa, es decir, que un script haga algo m\u00e1s que simplemente ir de arriba a abajo ejecutando comandos. La primera herramienta que vamos a aprender para controlar el flujo del programa son los condicionales que permiten crear secciones de c\u00f3digo que se van a ejecutar solo si se cumple (o no se cumple) una condici\u00f3n. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if [[ $numero -gt 10 ]] then echo \" $numero es mayor a 10\" fi # Igual que antes estoy agarrando un par\u00e1metro al correr el script numero = $1 echo \" $numero es un numero\" # *if* es la estructura m\u00e1s usada para condicionales # Adentro de los corchetes va la condici\u00f3n. \"-gt\" es el comparador. El que estamos usando aca es el # \">\" o \"greater\" if [[ $numero -gt 10 ]] then # El codigo entre *then* y *fi* solo si ejecuta si la condici\u00f3n es verdad, de otra forma se saltea # Este codigo esta m\u00e1s a la derecha, o *indentado*. Esto se hace con tab y en la mayor\u00eda de los lenguajes # es solo para entender m\u00e1s f\u00e1cil el c\u00f3digo (en python y algunos otros lenguajes es necesario indentar # para que el programa ande bien) echo \" $numero es mayor a 10\" fi # *fi* indica donde termina el condicional Copien este c\u00f3digo a un script y prueben pasarle n\u00fameros menores y mayores a 10 a ver que pasa. Info Es importante remarcar que la condici\u00f3n del if (lo que en este caso se encuentra entre los corchetes) es b\u00e1sicamente una pregunta que puede tener solo una de dos respuestas posibles: S\u00ed (llamada en programaci\u00f3n Verdadero o True ) \u00f3 No (llamada en programaci\u00f3n Falso o False ) Como dije antes a un condicional se le puede poner tambi\u00e9n que pase algo cuando no es verdad, por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if [[ $numero -gt 10 ]] then echo \" $numero es mayor a 10\" else echo \" $numero es menor o igual a 10\" fi numero = $1 echo \" $numero es un numero\" if [[ $numero -gt 10 ]] then # Ahora si la condici\u00f3n es verdad se va a ejecutar el c\u00f3digo entre *then* y *else* y luego va a seguir a partir de *fi* echo \" $numero es mayor a 10\" else # El c\u00f3digo entre *else* y *fi* se ejecuta solo cuando la condici\u00f3n no es verdad echo \" $numero es menor o igual a 10\" fi Hay bastante m\u00e1s para hablar de los ifs . Hay muchos m\u00e1s comparadores y son diferentes si estoy comparando n\u00fameros o strings . Hay formas de poner m\u00e1s de una condici\u00f3n por if y hay otras estructuras como son los case que cumplen una funci\u00f3n similar. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los condicionales en Bash, incluyendo una lista m\u00e1s detallada de los comparadores, se puede ver en esta p\u00e1gina .","title":"Condicionales"},{"location":"practicos/1-Trabajo-Practico-Uno/#ciclos","text":"Digamos que por alguna extra\u00f1a raz\u00f3n quieren imprimir los numeros del 1 al 10 en la consola, tendr\u00edan que hacer echo 1 , echo 2 , etc, hasta llegar a echo 10 . \u00bfQu\u00e9 pasa si ahora les pido del 1 al 100, o al 1000?. Por suerte existen los ciclos , que son estructuras que nos permiten repetir algo varias veces y al usar variables podemos hacer que cada vez sea ligeramente diferente a la anterior. C\u00f3digo C\u00f3digo con comentarios for (( i = 1 ; i< = 1000 ; i++ )) do echo $i done # *for* es una de las estructuras m\u00e1s usadas para hacer ciclos # *i* es el nombre de la variable que va a cambiar de valor en cada ciclo. Se le podria poner cualquier nombre a # \u00e9sta variable, por ejemplo *numero* en nuestro caso, pero es costumbre ponele *i* # i=1 indica que el primer valor de $i es 1 # i<=1000 indica que el ciclo se va a repetir mientras $i sea menor o igual a 1000 # i++ indica que al final de cada ciclo el valor de $i va a subir en 1 for (( i = 1 ; i< = 1000 ; i++ )) do # El c\u00f3digo entre *do* y *done* se va a ejecutar una vez para cada posible $i en el rango echo $i done Hay otra versi\u00f3n del for que comunmente se denomina for each . En este caso $i no representa n\u00fameros que aumentan, sino diferentes elementos en una lista. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios for color in rojo amarillo verde do echo \"Este es el color $color \" done # Como ahora la variable son elementos de una lista le pongo el nombre *color* para que se sepa que es, # pero podr\u00eda ser *i* # Esta es una forma bastante mala de usar listas de elementos, donde la estoy declarando en el mismo *for*; # comunmente las listas existen de antes en el programa o las obtengo de un archivo o comando de Lubuntu for color in rojo amarillo verde do echo \"Este es el color $color \" done Hay bastante m\u00e1s para hablar de los ciclos . Se pueden hacer ciclos que aumenten de 2 en 2 o hacer ciclos que disminuyan. Hay otros dos tipos de ciclos comunmente den\u00f3minados while y until (tambien llamado do ) y hay formas de forzar salir del ciclo o pasar a la pr\u00f3xima iteraci\u00f3n con break y continue (tambien llamado next ). Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los ciclos en Bash se puede ver en esta p\u00e1gina .","title":"Ciclos"},{"location":"practicos/1-Trabajo-Practico-Uno/#ejercicio-3-programacion-en-bash","text":"","title":"Ejercicio 3"},{"location":"practicos/1-Trabajo-Practico-Uno/#rehacer","text":"El objetivo de este Ejercicio va a ser hacer un script que reciba un n\u00famero por consola y escriba todos los n\u00fameros pares entre 1 y dicho n\u00famero. Para hacerla simple vamos a asumir que el numero que le pasamos por consola va a ser un n\u00famero entero entre 1 y 1000. Dos cosas que van a necesitar para hacer esto son: # El operador % calcula el resto entre 2 n\u00fameros # En este caso $resto va a contener el resto de dividir 5 por 2 (que es 1) # Los par\u00e9ntesis y signo $ bordeando a la operaci\u00f3n son necesarios para que funcione bien en Bash resto = $(( 5 % 2 )) # == es el comparador para igualdad usado en los *ifs* # Va a ser verdadero solo si lo de la izquierda es identico a lo de la derecha. if [[ 2 == 2 ]] Si quieren pueden intentar programar directamente, pero para hacer programas complejos, especialmente en un lenguaje que reci\u00e9n aprenden, es recomendado ir por partes e ir probando en el medio. Unos posibles pasos a seguir son: Info La idea de hacerlo as\u00ed es ir probando de a poco si aparece algun error. \u00a1Prueben el script entre cada paso principal! Creen un script en el que se declare una variable llamada $numero y la imprima en la terminal. Agreguen al script otra variable llamada $resto , que va a ser el resto de dividir a $numero por 2. Hagan que el script imprima tanto $numero como $resto (en 2 lineas diferentes). Agreguen un condicional que vea si $resto es 0 (y por lo tanto si $numero es par). De ser verdadero, hagan que imprima \"es par\". Agreguen un ciclo que vaya de 1 a $numero e imprima todos esos n\u00fameros. En este momento tenemos todos los elementos necesarios andando, pero hay que borrar algunas lineas, reescribir pedazos de otras lineas y mover algunos bloques adentro de otros. Traten de pensar que hay que modificar para conseguir nuestro objetivo. No es trivial esto, asi que si ven que se les complica lean las instrucciones siguientes: Spoilers Borren la linea que imprime $resto y la linea que imprime $numero (no nos interesa esta salida) Muevan la declaraci\u00f3n de $resto y el if adentro del for (ya que tengo que ver si cada uno de los n\u00fameros del for es par) Cambien la declaraci\u00f3n de $resto para que calcule el resto de dividir $i por 2 y no $numero Muevan la linea que imprime $i adentro del if (que ahora est\u00e1 a su vez adentro del for ) y borren la linea que imprime \"es par\" (porque yo quer\u00eda los n\u00fameros) Cambien la declaraci\u00f3n de $numero al principio de todo para que tome el primer par\u00e1metro pasado en la consola Y listo, deber\u00edan tener su programa andando.","title":"REHACER"},{"location":"practicos/1-Trabajo-Practico-Uno/#bash-tablas","text":"Lo ultimo que vamos a aprender hoy es un peque\u00f1o vistazo a como se pueden manipular tablas desde la consola de Lubuntu. Descarguen el archivo mtcars que se encuentra en los materiales del TP (boton al principio de todo) y ponganlo en Documentos . Esta tabla viene por defecto con el lenguaje de programaci\u00f3n R y nos va a servir para aprender como manipular tablas en Bash. Abran el archivo con Leafpad (doble click). Podemos ver que es una tabla en formato texto, donde la primera l\u00ednea es el encabezado o header de la tabla y en cada l\u00ed\u0144ea las columnas est\u00e1s separadas entre ellas con un Tab . Imaginense si tuvieran que copiar solo una columna de esta tabla, o quedarse con aquellas filas que tengan un n\u00famero espec\u00edfico de cilindros (columna cyl ), \u00bfcomo lo har\u00edan? Esto es lo que vamos a aprender a continuaci\u00f3n. Columnas de mtcars mtcars es una tabla que viene por defecto con el lenguaje de programaci\u00f3n R , sus columnas son: Nombre Descripci\u00f3n car_name Name of the car mpg Miles/(US) gallon cyl Number of cylinders disp Displacement (cu.in.) hp Gross horsepower drat Rear axle ratio wt Weight (1000 lbs) qsec 1/4 mile time vs Engine (0 = V-shaped, 1 = straight) am Transmission (0 = automatic, 1 = manual) gear Number of forward gears carb Number of carburetors","title":"Bash: Tablas"},{"location":"practicos/1-Trabajo-Practico-Uno/#awk","text":"El comando awk (que recibe su nombre de las iniciales de los apellidos de las 3 personas que lo crearon) es uno de los comandos mas usados en Bash para manipular tablas por su gran flexibilidad, hasta el punto que es posible incorporar condicionales y ciclos dentro de \u00e9l. La forma m\u00e1s simple del comando es: awk -opciones 'instrucciones' TABLEFILE Donde TABLEFILE es el archivo que contiene a la tabla e instrucciones es que hacer con ese archivo una vez que se abra (las instrucciones siempre tienen que estar delimitadas por comillas simples, o ' ). Colocando a nuestra terminal en Documentos podemos correr: awk -F \"\\t\" '{print}' mtcars Donde -F es la opci\u00f3n que le dice a awk cual es el caracter que separa las diferentes columnas (en este caso es \\t , que es el s\u00edmbolo de Tab ) y {print} es la instrucci\u00f3n que simplemente dice que imprima en pantalla la tabla. Lo importante de awk es que nos permite trabajar con columnas individuales. Por ejemplo si ponemos: awk -F \"\\t\" '{print $1}' mtcars Vemos que awk imprime solo la primera columna, que en este caso es el nombre de los autos. Podemos asumir entonces que cada columna se puede referir con $1 , $2 , etc. Probemos imprimir muchas columnas corriendo: awk -F \"\\t\" '{print $1 $3 $5}' mtcars \u00bfQu\u00e9 ven que pasa aca? Debido a como funciona print , las diferentes columnas se imprimeron una pegada a la otra sin dejar espacios. Si quisieramos imprimir las columnas separadas con Tab como la tabla original tenemos que hacer: awk -F \"\\t\" '{print $1 \"\\t\" $3 \"\\t\" $5}' mtcars Ahora bien, una actividad normal cuando se tienen tablas con muchos datos es filtrar mis datos por alguna columna, o dicho de otra forma, usar condicionales. Un ejemplo de esto en awk seria: awk -F \"\\t\" '{if ($3 == 6) {print}}' mtcars \u00bfQu\u00e9 les parece que hace ese comando? Piensen que estan viendo una estructura de if que no vieron antes, pero aun as\u00ed probablemente puedan inferir que va a hacer el comando pensando en como funcionaba el if de Bash que aprendimos arriba. Esto es super normal en la programaci\u00f3n, donde la estructura exacta cambia, pero la l\u00f3gica detr\u00e1s se mantiene constante. Entonces, aca le estan diciendo a awk que imprima en la pantalla todas las filas que tengan un valor de 6 en la columna 3 (que si se fijan es cyl , o el n\u00famero de cilindros). Como siempre hay mucho m\u00e1s para decir sobre awk , pero por hoy estamos bien. Sepan sin embargo que awk tiene su propio grep y su propio for , que se pueden declarar variables dentro de \u00e9l y que tiene hasta una lista de comandos propios. Pueden ver mucha m\u00e1s informaci\u00f3n de awk en esta p\u00e1gina .","title":"AWK"},{"location":"practicos/1-Trabajo-Practico-Uno/#ejercicio-adicional-1-programacion-en-bash","text":"Info Algunas guias van a tener ejercicios adicionales, que son ejercicios que pueden hacer si quieren practicar m\u00e1s el tema, pero no son obligatorios. Suelen ser un poco m\u00e1s complicados que los ejercicios de la gu\u00eda. El objetivo de este Ejercicio va a ser hacer un script que reciba un n\u00famero por consola y escriba todos los n\u00fameros pares entre 1 y dicho n\u00famero. Para hacerla simple vamos a asumir que el numero que le pasamos por consola va a ser un n\u00famero entero entre 1 y 1000. Dos cosas que van a necesitar para hacer esto son: # El operador % calcula el resto entre 2 n\u00fameros # En este caso $resto va a contener el resto de dividir 5 por 2 (que es 1) # Los par\u00e9ntesis y signo $ bordeando a la operaci\u00f3n son necesarios para que funcione bien en Bash resto = $(( 5 % 2 )) # == es el comparador para igualdad usado en los *ifs* # Va a ser verdadero solo si lo de la izquierda es identico a lo de la derecha. if [[ 2 == 2 ]] Si quieren pueden intentar programar directamente, pero para hacer programas complejos, especialmente en un lenguaje que reci\u00e9n aprenden, es recomendado ir por partes e ir probando en el medio. Unos posibles pasos a seguir son: Info La idea de hacerlo as\u00ed es ir probando de a poco si aparece algun error. \u00a1Prueben el script entre cada paso principal! Creen un script en el que se declare una variable llamada $numero y la imprima en la terminal. Agreguen al script otra variable llamada $resto , que va a ser el resto de dividir a $numero por 2. Hagan que el script imprima tanto $numero como $resto (en 2 lineas diferentes). Agreguen un condicional que vea si $resto es 0 (y por lo tanto si $numero es par). De ser verdadero, hagan que imprima \"es par\". Agreguen un ciclo que vaya de 1 a $numero e imprima todos esos n\u00fameros. En este momento tenemos todos los elementos necesarios andando, pero hay que borrar algunas lineas, reescribir pedazos de otras lineas y mover algunos bloques adentro de otros. Traten de pensar que hay que modificar para conseguir nuestro objetivo. No es trivial esto, asi que si ven que se les complica lean las instrucciones siguientes: Spoilers Borren la linea que imprime $resto y la linea que imprime $numero (no nos interesa esta salida) Muevan la declaraci\u00f3n de $resto y el if adentro del for (ya que tengo que ver si cada uno de los n\u00fameros del for es par) Cambien la declaraci\u00f3n de $resto para que calcule el resto de dividir $i por 2 y no $numero Muevan la linea que imprime $i adentro del if (que ahora est\u00e1 a su vez adentro del for ) y borren la linea que imprime \"es par\" (porque yo quer\u00eda los n\u00fameros) Cambien la declaraci\u00f3n de $numero al principio de todo para que tome el primer par\u00e1metro pasado en la consola \u00a1Y listo!, deber\u00edan tener su programa andando.","title":"Ejercicio Adicional 1"},{"location":"practicos/1-Trabajo-Practico-Uno/#bibliografia","text":"","title":"Bibliograf\u00eda"},{"location":"practicos/1-Trabajo-Practico-Uno/#consola","text":"Comando man","title":" Consola"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/","text":"TP1. Titulo del Trabajo Pr\u00e1ctico Materiales Software a usar Programa 1 www.donde.lo.bajo.com Programa 2 www.donde.lo.bajo2.com Recursos Online Recurso 1 www.webAusar.com Recurso 2 www.webAusar.com Objetivos Introduccion al Tema Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non onsequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Existen distintos de Admonitions Atenci\u00f3n esto es un admonition!! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition desplegable (Esto est\u00e1 bueno para ver las soluciones a las cosas o tipo los ayuda memoria, c\u00f3digo de amino\u00e1cidos de una letra, etc) Atenci\u00f3n !! Sin desplegar Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Definici\u00f3n de Inline Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Esto en teor\u00eda ser\u00eda para que me entre ac\u00e1 y me quede a la izquierda LO QUE EST\u00c1 PUESTO ARRIBA ladito Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Todos los tipos disponibles ac\u00e1 Todo lo que sea c\u00f3digo y se muestre la soluci\u00f3n se recomienda usar las tabs C\u00f3digo Ouput Esto es una prueba Y esta es la otra prueba Ejercicio 1. Titulo del Ejercicio a realizar probado el titulo en codigo 1 2 3 4 5 6 import tensorflow as tf def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Ejercicio 2. Titulo del Ejercicio a realizar The range() function is used to generate a sequence of numbers. >seq1 ARTPLKMNSDADASDASDASJFGDAKJFGKJDAHGFKJDHALFKDHFLKJHAKF DLKFJHALKDFHKLJHDLFKJHDAKFHLKADJHFLKJHALDKFHLAKDHFLKHA DSDADSSA Ctrl + Alt + Del Ctrl + V Bibliograf\u00eda Libros Libro 1 Libro 2 Online Material 1 Material 2","title":"Index"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#tp1-titulo-del-trabajo-practico","text":"Materiales","title":"Label que aparece en Table Of Contents"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#software-a-usar","text":"Programa 1 www.donde.lo.bajo.com Programa 2 www.donde.lo.bajo2.com","title":"Software a usar"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#recursos-online","text":"Recurso 1 www.webAusar.com Recurso 2 www.webAusar.com","title":"Recursos Online"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#objetivos","text":"","title":"Objetivos"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#introduccion-al-tema","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non onsequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Existen distintos de Admonitions Atenci\u00f3n esto es un admonition!! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition desplegable (Esto est\u00e1 bueno para ver las soluciones a las cosas o tipo los ayuda memoria, c\u00f3digo de amino\u00e1cidos de una letra, etc) Atenci\u00f3n !! Sin desplegar Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Definici\u00f3n de Inline Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Esto en teor\u00eda ser\u00eda para que me entre ac\u00e1 y me quede a la izquierda LO QUE EST\u00c1 PUESTO ARRIBA ladito Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Todos los tipos disponibles ac\u00e1 Todo lo que sea c\u00f3digo y se muestre la soluci\u00f3n se recomienda usar las tabs C\u00f3digo Ouput Esto es una prueba Y esta es la otra prueba","title":"Introduccion al Tema"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#ejercicio-1-titulo-del-ejercicio-a-realizar","text":"probado el titulo en codigo 1 2 3 4 5 6 import tensorflow as tf def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Ejercicio 1"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#ejercicio-2-titulo-del-ejercicio-a-realizar","text":"The range() function is used to generate a sequence of numbers. >seq1 ARTPLKMNSDADASDASDASJFGDAKJFGKJDAHGFKJDHALFKDHFLKJHAKF DLKFJHALKDFHKLJHDLFKJHDAKFHLKADJHFLKJHALDKFHLAKDHFLKHA DSDADSSA Ctrl + Alt + Del Ctrl + V","title":"Ejercicio 2"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#bibliografia","text":"","title":"Bibliograf\u00eda"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#libros","text":"Libro 1 Libro 2","title":" Libros"},{"location":"practicos/1-Trabajo-Practico-Uno/88_BU/#online","text":"Material 1 Material 2","title":" Online"},{"location":"practicos/2-Trabajo-Practico-Dos/","text":"TP2. EMBOSS Materiales Software a usar Recursos Online Objetivos Introduccion al Tema Cosas poner una carpeta input o output mkdir VpVAN_output for TAG in ls *-tag.fasta ; # Por cada archivo Fasta de tag disponible... do vpvanseq= cat VpVAN.fasta | grep -v \">\" ; # leer el archivo VpVAN y quitarle el header (>), guardarlo en una variable (1) tagseq= cat $TAG | grep -v \">\" ; # leer cada archivo tag y quitarle el header (>), guardarlo en otra variable (2) printf \">VpVAN-$TAG\\n$vpvanseq$tagseq\" > VpVAN_output/VpVAN-$TAG; # imprimir y guardar en un archivo separado para cada tag (3) done; tfm, que significa :p http://www.sacs.ucsf.edu/Documentation/emboss/tfm.html Ejercicio 1. Titulo del Ejercicio a realizar Bibliograf\u00eda","title":"Index"},{"location":"practicos/2-Trabajo-Practico-Dos/#tp2-emboss","text":"Materiales","title":"Label que aparece en Table Of Contents"},{"location":"practicos/2-Trabajo-Practico-Dos/#software-a-usar","text":"","title":"Software a usar"},{"location":"practicos/2-Trabajo-Practico-Dos/#recursos-online","text":"","title":"Recursos Online"},{"location":"practicos/2-Trabajo-Practico-Dos/#objetivos","text":"","title":"Objetivos"},{"location":"practicos/2-Trabajo-Practico-Dos/#introduccion-al-tema","text":"","title":"Introduccion al Tema"},{"location":"practicos/2-Trabajo-Practico-Dos/#cosas","text":"poner una carpeta input o output mkdir VpVAN_output for TAG in ls *-tag.fasta ; # Por cada archivo Fasta de tag disponible... do vpvanseq= cat VpVAN.fasta | grep -v \">\" ; # leer el archivo VpVAN y quitarle el header (>), guardarlo en una variable (1) tagseq= cat $TAG | grep -v \">\" ; # leer cada archivo tag y quitarle el header (>), guardarlo en otra variable (2) printf \">VpVAN-$TAG\\n$vpvanseq$tagseq\" > VpVAN_output/VpVAN-$TAG; # imprimir y guardar en un archivo separado para cada tag (3) done; tfm, que significa :p http://www.sacs.ucsf.edu/Documentation/emboss/tfm.html","title":"Cosas"},{"location":"practicos/2-Trabajo-Practico-Dos/#ejercicio-1-titulo-del-ejercicio-a-realizar","text":"","title":"Ejercicio 1"},{"location":"practicos/2-Trabajo-Practico-Dos/#bibliografia","text":"","title":"Bibliograf\u00eda"},{"location":"practicos/3-Trabajo-Practico-Tres/","text":"","title":"Index"},{"location":"teoricas/inicio/","tags":["teoricas"],"text":"Hola! Esta es la p\u00e1gina de inicio de la parte Te\u00f3rica del curso. Consultas y canales de comunicaci\u00f3n Por email a la direcci\u00f3n del profesor titular o profesores invitados. en Slack pueden mandar mensajes con consultas en distintos canales en el canal de YouTube estar\u00e1n subidos los videos de las clases te\u00f3ricas","title":"Inicio"},{"location":"teoricas/inicio/#hola","text":"Esta es la p\u00e1gina de inicio de la parte Te\u00f3rica del curso.","title":"Hola! "},{"location":"teoricas/inicio/#consultas-y-canales-de-comunicacion","text":"Por email a la direcci\u00f3n del profesor titular o profesores invitados. en Slack pueden mandar mensajes con consultas en distintos canales en el canal de YouTube estar\u00e1n subidos los videos de las clases te\u00f3ricas","title":"Consultas y canales de comunicaci\u00f3n"},{"location":"teoricas/resumen/","text":"","title":"Resumen"},{"location":"teoricas/1-Teorica-Uno/","tags":["teoricas"],"text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer sit amet fermentum justo, at rhoncus tellus. Aliquam nec magna ullamcorper, congue libero at, ultrices turpis. Vestibulum imperdiet sapien arcu, vitae faucibus nunc congue ut. Etiam non vulputate dui. Integer nec hendrerit libero. In bibendum lorem lectus, id volutpat diam imperdiet vel. Curabitur eu dictum sapien. Etiam lacinia lacinia commodo. Aliquam erat volutpat. Duis massa odio, vulputate in lorem id, fringilla tincidunt nunc. Quisque risus mauris, fringilla eget euismod quis, dictum id dui. Cras at lectus tempus, dapibus arcu sit amet, gravida diam. Video Material de lectura y consulta Uno Dos Tres","title":"Teorica Uno"},{"location":"teoricas/1-Teorica-Uno/#video","text":"","title":"Video "},{"location":"teoricas/1-Teorica-Uno/#material-de-lectura-y-consulta","text":"Uno Dos Tres","title":"Material de lectura y consulta"},{"location":"teoricas/2-Teorica-Dos/","tags":["teoricas"],"text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer sit amet fermentum justo, at rhoncus tellus. Aliquam nec magna ullamcorper, congue libero at, ultrices turpis. Vestibulum imperdiet sapien arcu, vitae faucibus nunc congue ut. Etiam non vulputate dui. Integer nec hendrerit libero. In bibendum lorem lectus, id volutpat diam imperdiet vel. Curabitur eu dictum sapien. Etiam lacinia lacinia commodo. Aliquam erat volutpat. Duis massa odio, vulputate in lorem id, fringilla tincidunt nunc. Quisque risus mauris, fringilla eget euismod quis, dictum id dui. Cras at lectus tempus, dapibus arcu sit amet, gravida diam. Video Material de lectura y consulta Uno Dos Tres","title":"Teorica Dos"},{"location":"teoricas/2-Teorica-Dos/#video","text":"","title":"Video "},{"location":"teoricas/2-Teorica-Dos/#material-de-lectura-y-consulta","text":"Uno Dos Tres","title":"Material de lectura y consulta"},{"location":"teoricas/3-Teorica-Tres/","tags":["teoricas"],"text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer sit amet fermentum justo, at rhoncus tellus. Aliquam nec magna ullamcorper, congue libero at, ultrices turpis. Vestibulum imperdiet sapien arcu, vitae faucibus nunc congue ut. Etiam non vulputate dui. Integer nec hendrerit libero. In bibendum lorem lectus, id volutpat diam imperdiet vel. Curabitur eu dictum sapien. Etiam lacinia lacinia commodo. Aliquam erat volutpat. Duis massa odio, vulputate in lorem id, fringilla tincidunt nunc. Quisque risus mauris, fringilla eget euismod quis, dictum id dui. Cras at lectus tempus, dapibus arcu sit amet, gravida diam. Video Material de lectura y consulta Uno Dos Tres","title":"Teorica Tres"},{"location":"teoricas/3-Teorica-Tres/#video","text":"","title":"Video "},{"location":"teoricas/3-Teorica-Tres/#material-de-lectura-y-consulta","text":"Uno Dos Tres","title":"Material de lectura y consulta"}]}